{"version":3,"sources":["views/base/tables/ListShopManager.js","views/Common/TextFieldGroup.js","redux/data/actions.js"],"names":["headers","Headers","auth","localStorage","getItem","append","Users","props","getUserSale","sale_id","a","company_id","state","setState","isLoading","id","JSON","parse","bodyCustomer","condition","Company_Id","Sale_Id","axios","baseURL","Constants","BASE_URL","url","LIST_CUSTOMER","method","data","res","pagination","dataApi","active","map","val","Status","totalActive","getUserSale_ByMonth","month","GET_USER_SALE_BY_MONTH","arrTemp","arrCount_User_Per","getArrTemp","i","some","item","Phone","count","countType","GET_COEFFICIENT_PER_SALE","idSale","resCal","coefficient","calculator","push","length","getUserSale_ByMonth_forSale","getAllData","resAll","arrCount_All_User","CALCULATOR_ALL_USER_OF_SALE","resCal_all","pagination_all","getData","GET_SHOP","token","openDelete","modalDelete","delete","key","keyUserName","keyName","keyEmail","keyCompanyCode","keyPhone","keyGender","keyCode","keyStatus","activePage","page","itemsCount","limit","modalCom","viewingUser","communities","updated","action","Email","Address","Name","Gender","Role_Id","UserName","Password","Code","dataCompany","currentCompany","dataSale","currentSale","dataRole","currentRole","arrPagination","indexPage","arrPagination_All","indexPage_All","role","see_detail","arrMonth","arrMonthWithDefault","hidden","nameSale","dataAll","hidden_all","isSale","Authorization","arrAllUser","this","arr","to","window","location","hash","href","GET_SEEDER","console","log","onSaveSeed","history","j","temparray","arrTotal","slice","phone","filter","d","toLocaleUpperCase","includes","e","name_action","target","value","searchKey","getCompanyData","getSaleData","getRoleData","alert","body","ADD_USER","is_success","message","UPDATE_USER","DELETE_USER","fetchData","fetch","global","then","users","json","result","total","catch","LIST_COMPANY","resCompany","undefined","LIST_COMPANY_WITH_ID","currentC","LIST_SALE","resSale","LIST_SALE_WITH_ID","LIST_ROLE","resRole","LIST_ROLE_WITH_ID","status","name","className","type","color","height","width","style","styles","tags","sm","lg","searchInput","onChange","actionSearch","placeholder","flexOption","custom","marginTop","size","onClick","resetSearch","outline","floatRight","toggleModal","Date","Create_Date","toLocaleDateString","toLocaleTimeString","getBadge","mgl5","openUpdate","float","marginRight","padding","row","isOpen","field","label","readOnly","flexLabel","htmlFor","selected","_id","addUser","updateUser","disabled","toggle","Component","wa10","sale_times","textAlign","margin","textDecoration","spinner","center","tbody","overflowY","wh12","ws12","wh15","w5","w5_10","success","danger","marginLeft","display","userActive","userPending","nagemonNameCol","image","borderRadius","connect","getData_AllAPI","onSaveID","TextFieldGroup","error","checkUserExists","classnames","onBlur","defaultProps","SAVE_ID_SALE","payload","seed","SAVE_SEED"],"mappings":"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","file":"static/js/80.0bf0c887.chunk.js","sourcesContent":["import React, { Component } from 'react';\n\nimport {\n  Card,\n  CardBody,\n  CardHeader,\n  Button, Input,\n  ModalHeader, ModalBody, ModalFooter, Modal,\n} from 'reactstrap';\n\nimport {\n  CBadge,\n  CRow,\n  CCol,\n  CSelect,\n} from '@coreui/react'\n\nimport { connect } from 'react-redux';\nimport {\n  onSaveID,\n  onSaveSeed\n} from '../../../redux/data/actions'\nimport 'moment-timezone';\nimport Constants from \"./../../../contants/contants\";\nimport TextFieldGroup from \"../../../views/Common/TextFieldGroup\";\nimport axios from 'axios'\nimport ReactLoading from 'react-loading';\n\nlet headers = new Headers();\nconst auth = localStorage.getItem('auth');\nheaders.append('Authorization', 'Bearer ' + auth);\nheaders.append('Content-Type', 'application/json');\n\nclass Users extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: [],\n      key: '',\n      keyUserName: '',\n      keyName: '',\n      keyEmail: '',\n      keyCompanyCode: '',\n      keyPhone: '',\n      keyGender: '',\n      keyCode: '',\n      keyStatus: '',\n      activePage: 1,\n      page: 1,\n      itemsCount: 0,\n      limit: 20,\n      totalActive: 0,\n      modalCom: false,\n      viewingUser: {},\n      communities: [],\n      updated: '',\n      dataApi: [],\n      action: 'new',\n      Email: '',\n      Address: '',\n      Name: '',\n      Phone: '',\n      Gender: 'Nam',\n      Company_Id: '',\n      Role_Id: '',\n      UserName: '',\n      Password: '',\n      Sale_Id: '',\n      Code: '',\n      Status: '',\n      modalDelete: false,\n      delete: null,\n      dataCompany: [],\n      currentCompany: '',\n      dataSale: [],\n      currentSale: '',\n      dataRole: [],\n      currentRole: '',\n      arrPagination: [],\n      indexPage: 0,\n      arrPagination_All: [],\n      indexPage_All: 0,\n      role: localStorage.getItem('role'),\n      company_id: localStorage.getItem('user'),\n      see_detail: true,\n      month: 0,\n      arrTemp: [],\n      arrMonth: [\n        \"01\", \"02\", \"03\", \"04\", \"05\", \"06\", \"07\", \"08\", \"09\", \"10\", \"11\", \"12\",\n      ],\n      arrMonthWithDefault: [\n        \"00\", \"01\", \"02\", \"03\", \"04\", \"05\", \"06\", \"07\", \"08\", \"09\", \"10\", \"11\", \"12\",\n      ],\n      isLoading: true,\n      hidden: false,\n      nameSale: '',\n      dataAll: [],\n      hidden_all: false,\n      isSale: false,\n      token: { Authorization: `Bearer ${localStorage.getItem('token')}` },\n      arrAllUser: []\n    };\n  }\n  async componentDidMount() {\n    this.getData();\n\n    let arr = JSON.parse(localStorage.getItem('url'));\n    for(let i = 0; i < arr.length; i++){\n      if(\"#\" + arr[i].to == window.location.hash){\n        if(arr[i].hidden == true){\n          window.location.href = '#/'\n        }\n      }\n    }\n  }\n\n  async getSeeder() {\n    const res = await axios({\n      baseURL: Constants.BASE_URL,\n      url: Constants.GET_SEEDER,\n      method: 'POST',\n      data: {\n        \"email\": \"ktpm489@gmail.com\"\n      }\n    })\n    console.log(res)\n    this.props.onSaveSeed(res.data.data);\n    this.props.history.push('/history')\n  }\n\n  pagination(dataApi) {\n    var i, j, temparray, chunk = 5;\n    var arrTotal = [];\n    for (i = 0, j = dataApi.length; i < j; i += chunk) {\n      temparray = dataApi.slice(i, i + chunk);\n      arrTotal.push(temparray);\n    }\n    if (arrTotal.length == 0) {\n      this.setState({\n        hidden: false\n      })\n    } else {\n      this.setState({\n        hidden: true\n      })\n    }\n    this.setState({ arrPagination: arrTotal, data: arrTotal[this.state.indexPage] });\n  }\n\n  pagination_all(dataApi) {\n    var i, j, temparray, chunk = 5;\n    let arrTotal = [];\n    for (i = 0, j = dataApi.length; i < j; i += chunk) {\n      temparray = dataApi.slice(i, i + chunk);\n      arrTotal.push(temparray);\n    }\n    if (arrTotal.length == 0) {\n      this.setState({\n        hidden_all: false\n      })\n    } else {\n      this.setState({\n        hidden_all: true\n      })\n    }\n    this.setState({ arrPagination_All: arrTotal, dataAll: arrTotal[this.state.indexPage_All] });\n  }\n\n  getUserSale = async (sale_id) => {\n    const { company_id } = this.state;\n    this.setState({ isLoading: true });\n    var id = JSON.parse(company_id);\n\n    var bodyCustomer = {\n      condition: {\n        Company_Id: id.company_id,\n        Sale_Id: sale_id\n      }\n    }\n\n    var res = await axios({\n      baseURL: Constants.BASE_URL,\n      url: Constants.LIST_CUSTOMER,\n      method: 'POST',\n      data: bodyCustomer\n    })\n\n    this.pagination(res.data.data);\n    this.setState({ dataApi: res.data.data });\n\n    let active = 0\n\n    res.data.data.map(val => {\n      if (val.Status == \"Actived\") {\n        active = active + 1\n      }\n    })\n\n    this.setState({ isLoading: false, totalActive: active });\n  }\n\n  countType(arr, phone) {\n    const count = arr.filter(data => data.Phone == phone);\n    return count.length;\n  }\n\n  getUserSale_ByMonth = async (sale_id, month) => {\n    const { company_id } = this.state;\n    var id = JSON.parse(company_id);\n\n    var bodyCustomer = {\n      \"month\": month,\n      \"company_id\": id.company_id,\n      \"sale_id\": sale_id\n    }\n\n    const res = await axios({\n      baseURL: Constants.BASE_URL,\n      url: Constants.GET_USER_SALE_BY_MONTH,\n      method: 'POST',\n      data: bodyCustomer\n    })\n\n    this.setState({ dataApi: res.data.data, arrTemp: res.data.data });\n    let arrCount_User_Per = [];\n    var getArrTemp = this.state.arrTemp;\n    for (let i = 0; i < getArrTemp.length; i++) {\n      //check if exits in arr\n      if (!arrCount_User_Per.some(item => getArrTemp[i].Phone == item.Phone)) {\n        getArrTemp[i].count = this.countType(getArrTemp, getArrTemp[i].Phone);\n        const resCal = await axios({\n          baseURL: Constants.BASE_URL,\n          url: Constants.GET_COEFFICIENT_PER_SALE,\n          method: 'POST',\n          data: {\n            \"month\": month,\n            \"company_id\": id.company_id,\n            \"phone\": getArrTemp[i].Phone,\n            \"sale_id\": this.props.data.idSale\n          }\n        });\n        getArrTemp[i].coefficient = resCal.data.data.calculator;\n        arrCount_User_Per.push(getArrTemp[i])\n      }\n    }\n\n    this.pagination(arrCount_User_Per);\n    this.setState({ isLoading: false });\n  }\n\n  getUserSale_ByMonth_forSale = async (sale_id, month) => {\n    const { company_id } = this.state;\n    this.setState({ isLoading: true });\n    var id = JSON.parse(company_id);\n\n    var bodyCustomer = {\n      \"month\": month,\n      \"company_id\": id.company_id,\n      \"sale_id\": sale_id\n    }\n\n    const res = await axios({\n      baseURL: Constants.BASE_URL,\n      url: Constants.GET_USER_SALE_BY_MONTH,\n      method: 'POST',\n      data: bodyCustomer\n    })\n\n    this.setState({ dataApi: res.data.data, arrTemp: res.data.data });\n    let arrCount_User_Per = [];\n    var getArrTemp = this.state.arrTemp;\n    for (let i = 0; i < getArrTemp.length; i++) {\n      //check if exits in arr\n      if (!arrCount_User_Per.some(item => getArrTemp[i].Phone == item.Phone)) {\n        getArrTemp[i].count = this.countType(getArrTemp, getArrTemp[i].Phone);\n        const resCal = await axios({\n          baseURL: Constants.BASE_URL,\n          url: Constants.GET_COEFFICIENT_PER_SALE,\n          method: 'POST',\n          data: {\n            \"month\": month,\n            \"company_id\": id.company_id,\n            \"phone\": getArrTemp[i].Phone,\n            \"sale_id\": sale_id\n          }\n        });\n        getArrTemp[i].coefficient = resCal.data.data.calculator;\n        arrCount_User_Per.push(getArrTemp[i])\n      }\n    }\n    this.pagination(arrCount_User_Per);\n    this.setState({ isLoading: false });\n  }\n\n  getAllData = async () => {\n    const { company_id } = this.state;\n    this.setState({ isLoading: true });\n    var id = JSON.parse(company_id);\n\n    var resAll = await axios({\n      baseURL: Constants.BASE_URL,\n      url: Constants.LIST_CUSTOMER,\n      method: 'POST',\n      data: {\n        condition: {\n          Company_Id: id.company_id,\n          Sale_Id: this.props.data.idSale\n        }\n      }\n    })\n\n    this.setState({ dataApi: resAll.data.data });\n\n    let arrCount_All_User = [];\n\n    for (let i = 0; i < resAll.data.data.length; i++) {\n      //check if exits in arr\n      if (!arrCount_All_User.some(item => resAll.data.data[i].Phone == item.Phone)) {\n        resAll.data.data[i].count = this.countType(resAll.data.data, resAll.data.data[i].Phone);\n\n        var resCal_all = await axios({\n          baseURL: Constants.BASE_URL,\n          url: Constants.CALCULATOR_ALL_USER_OF_SALE,\n          method: 'POST',\n          data: {\n            \"company_id\": id.company_id,\n            \"phone\": resAll.data.data[i].Phone,\n            \"sale_id\": this.props.data.idSale\n          }\n        });\n        resAll.data.data[i].coefficient = resCal_all.data.data.calculator;\n        arrCount_All_User.push(resAll.data.data[i])\n      }\n    }\n\n    this.pagination_all(arrCount_All_User);\n    this.setState({ isLoading: false });\n  }\n\n  getData = async () => {\n    const { company_id } = this.state;\n    this.setState({ isLoading: true });\n\n    var res = await axios({\n      baseURL: Constants.BASE_URL,\n      url: Constants.GET_SHOP,\n      method: 'POST',\n      headers: this.state.token\n    });\n\n    this.pagination(res.data.data);\n    this.setState({ dataApi: res.data.data });\n\n    let active = 0\n\n    // res.data.data.map(val => {\n    //   if (val.Status == \"Actived\") {\n    //     active = active + 1\n    //   }\n    // })\n\n    this.setState({ isLoading: false, totalActive: active });\n  }\n\n  searchKey() {\n    const { indexPage, key, keyStatus } = this.state;\n\n    if (key != '' || keyStatus != '') {\n      let d = []\n      this.state.dataApi.map(val => {\n        if ((val.Name.toLocaleUpperCase().includes(key.toLocaleUpperCase()) ||\n            val.Email.toLocaleUpperCase().includes(key.toLocaleUpperCase()) ||\n            val.Phone.toLocaleUpperCase().includes(key.toLocaleUpperCase())) &&\n            val.Status.toLocaleUpperCase().includes(keyStatus.toLocaleUpperCase())) {\n          d.push(val)\n        }\n      })\n      let active = 0\n\n      d.map(val => {\n        if (val.Status == \"Actived\") {\n          active = active + 1\n        }\n      })\n\n      this.setState({ data: d, totalActive: active })\n    } else {\n      let active = 0\n\n      this.state.dataApi.map(val => {\n        if (val.Status == \"Actived\") {\n          active = active + 1\n        }\n      })\n\n      this.setState({ data: this.state.arrPagination[indexPage], totalActive: active })\n    }\n  }\n\n\n  actionSearch(e, name_action) {\n    this.setState({\n      [name_action]: e.target.value\n    }, () => {\n      this.searchKey();\n    });\n  }\n\n  resetSearch() {\n    this.setState({\n      keyUserName: '',\n      keyName: '',\n      keyEmail: '',\n      keyCompanyCode: '',\n      keyPhone: '',\n      keyGender: '',\n      keyCode: '',\n      keyStatus: ''\n    }, () => {\n      this.searchKey();\n    });\n  }\n\n  async toggleModal(key) {\n    await this.getCompanyData()\n    await this.getSaleData()\n    await this.getRoleData()\n    if (key == 'new') {\n      this.setState({\n        modalCom: !this.state.modalCom,\n        action: key,\n        Email: '',\n        Name: '',\n        Phone: '',\n        Gender: 'Nam',\n        Company_Id: '',\n        Role_Id: '',\n        UserName: '',\n        Password: '',\n        Sale_Id: '',\n        Code: ''\n      })\n    }\n  }\n\n  onChange(key, val) {\n    this.setState({ [key]: val })\n  }\n\n  async addUser() {\n    const { Email, Name, Phone, UserName, Code, Password, Gender, Role_Id, Company_Id, Sale_Id, Address } = this.state\n\n    if (Email == null || Email == ''\n      || Name == null || Name == ''\n      || Phone == null || Phone == ''\n      || UserName == null || UserName == ''\n      || Password == null || Password == '') {\n      alert(\"Vui lòng nhập đầy đủ trường !!!\");\n      return\n    }\n\n    const { company_id } = this.state;\n    var id = JSON.parse(company_id);\n    console.log(id.company_id)\n    const body = {\n      Email: Email,\n      Address: Address,\n      Name: Name,\n      Phone: Phone,\n      Gender: Gender,\n      Company_Id: this.state.role == 'ADMIN' || this.state.role == 'ADMINSALE' ? Company_Id : id.company_id,\n      Role_Id: Role_Id,\n      UserName: UserName,\n      Password: Password,\n      Sale_Id: Sale_Id,\n      Code: id.company_id\n    }\n\n    this.setState({ isLoading: true });\n    const res = await axios({\n      baseURL: Constants.BASE_URL,\n      url: Constants.ADD_USER,\n      method: 'POST',\n      data: body\n    });\n\n    if (res.data.is_success == true) {\n      this.getData();\n      this.setState({ modalCom: !this.state.modalCom })\n    } else {\n      alert(res.data.message);\n      this.setState({ isLoading: false });\n    }\n  }\n\n  async openUpdate(item) {\n    await this.getCompanyData(item.Company_Id)\n    await this.getSaleData(item.Sale_Id)\n    await this.getRoleData(item.Role_Id)\n\n    this.setState({\n      modalCom: !this.state.modalCom,\n      action: \"update\",\n      Email: item.Email,\n      Address: item.Address,\n      Name: item.Name,\n      Phone: item.Phone,\n      Gender: item.Gender,\n      Company_Id: item.Company_Id,\n      Role_Id: item.Role_Id,\n      UserName: item.UserName,\n      Password: item.Password,\n      Sale_Id: item.Sale_Id,\n      Code: item.Code,\n      id: item['_id'],\n      Status: item.Status\n    })\n  }\n\n  async updateUser() {\n    const { company_id } = this.state;\n    var id = JSON.parse(company_id);\n\n    const { Email, Name, Phone, UserName, Code, Password, Gender, Role_Id,\n      Company_Id, Sale_Id, Status, Address } = this.state\n\n    if (Email == null || Email == ''\n      || Name == null || Name == ''\n      || Phone == null || Phone == ''\n      || UserName == null || UserName == ''\n      || Password == null || Password == '') {\n      alert(\"Vui lòng nhập đầy đủ trường !!!\");\n      return\n    }\n\n    const body = {\n      Email: Email,\n      Address: Address,\n      Name: Name,\n      Phone: Phone,\n      Gender: Gender,\n      Company_Id: this.state.role == 'ADMIN' || this.state.role == 'ADMINSALE' ? Company_Id : id.company_id,\n      Role_Id: Role_Id,\n      UserName: UserName,\n      Password: Password,\n      Sale_Id: Sale_Id,\n      Code: Code,\n      id: this.state.id,\n      Status: Status\n    }\n\n    this.setState({ isLoading: true });\n    const res = await axios({\n      baseURL: Constants.BASE_URL,\n      url: Constants.UPDATE_USER,\n      method: 'POST',\n      data: body\n    });\n\n    if (res.data.is_success == true) {\n      this.getData();\n      this.setState({ modalCom: !this.state.modalCom })\n    } else {\n      alert(res.data.message);\n      this.setState({ isLoading: false });\n    }\n  }\n\n  openDelete = (item) => {\n    this.setState({\n      modalDelete: !this.state.modalDelete,\n      delete: item\n    })\n  }\n\n  async delete() {\n    this.setState({ isLoading: true });\n    const res = await axios({\n      baseURL: Constants.BASE_URL,\n      url: Constants.DELETE_USER,\n      method: 'DELETE',\n      data: {\n        \"id\": this.state.delete['_id']\n      }\n    });\n\n    if (res.data.is_success == true) {\n      this.getData();\n      this.setState({ modalDelete: !this.state.modalDelete, delete: null })\n    } else {\n      alert(res.data.message);\n      this.setState({ isLoading: false });\n    }\n\n  }\n\n  getUsers(page = 1) {\n    const limit = this.state.limit;\n    const key = this.state.key || '';\n    const fetchData = {\n      method: 'GET',\n      headers: headers\n    };\n    fetch(global.BASE_URL + '/admin/users?key=' + key + '&page=' + page + '&limit=' + limit, fetchData).then(users => {\n      users.json().then(result => {\n        this.setState({\n          data: result.data,\n          itemsCount: result.total,\n          activePage: page,\n          totalActive: result.totalActive,\n          updated: '',\n        });\n      })\n    }).catch(console.log);\n  }\n\n  async getCompanyData(id) {\n    const resCompany = await axios({\n      baseURL: Constants.BASE_URL,\n      url: Constants.LIST_COMPANY,\n      method: 'POST',\n    });\n\n    if (id != '' || id != undefined) {\n      const currentC = await axios({\n        baseURL: Constants.BASE_URL,\n        url: Constants.LIST_COMPANY_WITH_ID + id,\n        method: 'POST',\n      });\n      if (currentC.data.data != null || currentC.data.data != undefined) {\n        this.setState({ currentCompany: currentC.data.data.Name });\n      }\n    }\n    this.setState({ dataCompany: resCompany.data.data });\n  }\n\n  async getSaleData(id) {\n    const resSale = await axios({\n      baseURL: Constants.BASE_URL,\n      url: Constants.LIST_SALE,\n      method: 'GET',\n    });\n\n    if (id != '' || id != undefined) {\n      const currentSale = await axios({\n        baseURL: Constants.BASE_URL,\n        url: Constants.LIST_SALE_WITH_ID + id,\n        method: 'GET',\n      });\n      if (currentSale.data.data != null || currentSale.data.data != undefined) {\n        this.setState({ currentSale: currentSale.data.data.Name });\n      }\n    }\n    this.setState({ dataSale: resSale.data.data });\n  }\n\n  async getRoleData(id) {\n    const resRole = await axios({\n      baseURL: Constants.BASE_URL,\n      url: Constants.LIST_ROLE,\n      method: 'GET',\n      headers: this.state.token\n    });\n\n    if (id != '' || id != undefined) {\n      const currentRole = await axios({\n        baseURL: Constants.BASE_URL,\n        url: Constants.LIST_ROLE_WITH_ID + id,\n        method: 'GET',\n        headers: this.state.token\n      });\n      if (currentRole.data.data != null || currentRole.data.data != undefined) {\n        this.setState({ currentRole: currentRole.data.data.Name });\n      }\n    }\n    this.setState({ dataRole: resRole.data.data });\n  }\n\n  getBadge(status) {\n    switch (status) {\n      case 'Actived': return 'success'\n      case 'Inactive': return 'secondary'\n      case 'Locked': return 'warning'\n      case 'Deactived': return 'danger'\n      default: return 'primary'\n    }\n  }\n  inputChange(e) {\n    this.setState({ [e.target.name]: e.target.value });\n  }\n\n  render() {\n    const { data, key, action, dataRole, currentRole, arrPagination, indexPage } = this.state;\n\n    if (!this.state.isLoading) {\n      return (\n        <div>\n          <Card>\n            <CardHeader>\n\n              Danh sách chủ shop ( Page: {this.state.indexPage + 1} )\n\n              <div style={styles.tags}>\n                <CRow>\n                  <CCol sm=\"12\" lg=\"12\">\n                    <CRow>\n                      <CCol sm=\"12\" lg=\"4\">\n                        <div>\n                          <Input style={styles.searchInput} onChange={(e) => {\n                            this.actionSearch(e, \"key\");\n                          }} name=\"key\" value={key} placeholder=\"Từ khóa\" />\n                        </div>\n                      </CCol>\n                      <CCol sm=\"12\" lg=\"4\">\n                        <CSelect style={styles.flexOption} onChange={e => {\n\n                          this.actionSearch(e, \"keyStatus\");\n\n                        }} custom>\n                          {\n                            ['Actived', 'Deactived', 'Locked'].map((item, i) => {\n                              return (\n                                <option value={item}>{item}</option>\n                              );\n                            })\n                          }\n                        </CSelect>\n                      </CCol>\n                      <CCol sm=\"12\" lg=\"4\">\n                        <Button color=\"primary\" style={{ width: '100%', marginTop: 5 }} size=\"sm\" onClick={e => { this.resetSearch() }}>Làm mới tìm kiếm</Button>\n                      </CCol>\n                    </CRow>\n                  </CCol>\n                  <CCol sm=\"12\" lg=\"12\">\n                    <Button outline color=\"primary\" style={styles.floatRight} size=\"sm\" onClick={e => this.toggleModal(\"new\")}>Thêm mới</Button>\n                  </CCol>\n                </CRow>\n              </div>\n\n\n\n              {/* <CRow>\n                <CCol lg=\"5\" sm=\"5\" md=\"5\" xs=\"12\">\n                  <div style={styles.tags}>\n                    {\n                      role == 'SALES' ? \"\" :\n                        <div>\n                          <Input style={styles.searchInput} onChange={(e) => this.searchKey(e.target.value)} name=\"key\" value={key} placeholder=\"Search\" />\n                          <Button outline color=\"primary\" style={styles.floatRight} size=\"sm\" onClick={async e => await this.toggleModal(\"new\")}>Add</Button>\n                        </div>\n                    }\n                  </div>\n                </CCol>\n                <CCol lg=\"7\" sm=\"7\" md=\"7\" xs=\"12\">\n                  <div>Choose Month</div>\n                  <CSelect style={{ width: 300, float: 'left', backgroundColor: '#ffff99' }} onChange={async e => { await this.check(e) }} custom size=\"sm\" name=\"selectSm\" id=\"SelectLm\">\n                    {\n                      this.state.arrMonthWithDefault.map((item, i) => {\n                        if (item == \"00\") {\n                          return (\n                            <option selected value={item}>Get All</option>\n                          );\n                        } else {\n                          if (item == this.state.month) {\n                            return (\n                              <option selected value={item}>{item}</option>\n                            );\n                          } else {\n                            return (\n                              <option value={item}>{item}</option>\n                            );\n                          }\n                        }\n                      })\n                    }\n                  </CSelect>\n                </CCol>\n              </CRow> */}\n            </CardHeader>\n            <CardBody>\n              {\n                <table className=\"table table-hover table-outline mb-0  d-sm-table\">\n                  <thead className=\"thead-light\">\n                    <tr>\n                      <th className=\"text-center\">STT.</th>\n                      <th className=\"text-center\">Tên</th>\n                      <th className=\"text-center\">Email</th>\n                      <th className=\"text-center\">Số điện thoại</th>\n                      <th className=\"text-center\">Ngày tạo</th>\n                      <th className=\"text-center\">Trạng thái</th>\n                      <th className=\"text-center\">#</th>\n                    </tr>\n                  </thead>\n                  <tbody>\n                    {\n                      data != undefined ?\n                        data.map((item, i) => {\n                          return (\n                            <tr key={i}>\n                              <td className=\"text-center\">{i + 1}</td>\n                              <td className=\"text-center\">{item.Name}</td>\n                              <td className=\"text-center\">{item.Email}</td>\n                              <td className=\"text-center\">{item.Phone}</td>\n                              <td className=\"text-center\">\n                                {(new Date(item.Create_Date)).toLocaleDateString() + ' ' + (new Date(item.Create_Date)).toLocaleTimeString()}\n                              </td>\n                              <td className=\"text-center\">\n                                <CBadge color={this.getBadge(item.Status)}>\n                                  {item.Status}\n                                </CBadge>\n                              </td>\n                              <td className=\"text-center\">\n                                <Button style={styles.mgl5} outline color=\"primary\" size=\"sm\" onClick={async (e) => await this.openUpdate(item)} >Cập nhật</Button>{' '}\n                                <Button outline color=\"danger\" size=\"sm\" onClick={(e) => { this.openDelete(item) }}>Xoá</Button>{' '}\n                              </td>\n                            </tr>\n                          );\n                        }) : \"\"\n                    }\n                  </tbody>\n                </table>\n              }\n            </CardBody>\n          </Card>\n          {\n            arrPagination.length == 1 ? \"\" :\n              <div style={{ float: 'right', marginRight: '10px', padding: '10px' }}>\n                <tr style={styles.row}>\n                  {\n                    arrPagination.map((item, i) => {\n                      return (\n                        <td>\n                          <Button style={styles.pagination} color={i == indexPage ? 'primary' : 'danger'} onClick={e => { this.setState({ data: arrPagination[i], indexPage: i }) }}>{i + 1}</Button>\n                        </td>\n                      );\n                    })\n                  }\n                </tr>\n              </div>\n          }\n\n          <Modal isOpen={this.state.modalCom} className={this.props.className}>\n            <ModalHeader>{this.state.action == 'new' ? `Tạo mới` : `Cập nhật`}</ModalHeader>\n            <ModalBody>\n              <TextFieldGroup\n                field=\"Email\"\n                label=\"Email\"\n                value={this.state.Email}\n                placeholder={\"Email\"}\n                type={'email'}\n                onChange={e => this.onChange(\"Email\", e.target.value)}\n              // rows=\"5\"\n              />\n              <TextFieldGroup\n                field=\"Address\"\n                label=\"Địa chỉ\"\n                value={this.state.Address}\n                placeholder={\"Địa chỉ\"}\n                type={'text'}\n                onChange={e => this.onChange(\"Address\", e.target.value)}\n              // rows=\"5\"\n              />\n              <TextFieldGroup\n                field=\"Name\"\n                label=\"Tên\"\n                value={this.state.Name}\n                placeholder={\"Tên\"}\n                // error={errors.title}\n                onChange={e => this.onChange(\"Name\", e.target.value)}\n              // rows=\"5\"\n              />\n\n              <TextFieldGroup\n                field=\"Password\"\n                label=\"Mật khẩu\"\n                value={this.state.Password}\n                type={\"password\"}\n                placeholder={\"Mật khẩu\"}\n                readOnly={action == 'new' ? false : true}\n                onChange={e => this.onChange(\"Password\", e.target.value)}\n              // rows=\"5\"\n              />\n\n              <TextFieldGroup\n                field=\"UserName\"\n                label=\"Tên đăng nhập\"\n                placeholder={\"Tên đăng nhập\"}\n                value={this.state.UserName}\n                // error={errors.title}\n                onChange={e => this.onChange(\"UserName\", e.target.value)}\n              // rows=\"5\"\n              />\n\n              <TextFieldGroup\n                field=\"Phone\"\n                label=\"Số điện thoại\"\n                value={this.state.Phone}\n                placeholder={\"Số điện thoại\"}\n                // error={errors.title}\n                onChange={e => this.onChange(\"Phone\", e.target.value)}\n              // rows=\"5\"\n              />\n\n              <div>\n                <label style={styles.flexLabel} htmlFor=\"tag\">Giới tính:    </label>\n                <select style={styles.flexOption} name=\"Gender\" onChange={e => this.onChange(\"Gender\", e.target.value)}>\n                  <option value={this.state.Gender}>{this.state.Gender == '' ? ` - - - - - - - - - - ` : this.state.Gender}</option>\n                  <option value={'Nam'}>Nam</option>\n                  <option value={'Nữ'}>Nữ</option>\n                </select>\n              </div>\n\n              {/* <div>\n                <label style={styles.flexLabel} htmlFor=\"tag\">Company:    </label>\n                <select style={styles.flexOption} name=\"Company_Id\" onChange={e => this.onChange(\"Company_Id\", e.target.value)}>\n                  <option value={this.state.Company_Id}>-----</option>\n                  {\n                    dataCompany.map((item, i) => {\n                      if (item.Name == currentCompany) {\n                        return (\n                          <option selected value={item._id}>{item.Name}</option>\n                        );\n                      } else {\n                        return (\n                          <option value={item._id}>{item.Name}</option>\n                        );\n                      }\n                    })\n                  }\n                </select>\n              </div> */}\n\n              <div>\n                <label style={styles.flexLabel} htmlFor=\"tag\">Phân quyền:    </label>\n                <select style={styles.flexOption} name=\"Role_Id\" onChange={e => this.onChange(\"Role_Id\", e.target.value)}>\n                  <option value={this.state.Role_Id}>-----</option>\n                  {\n                    this.state.role == 'ADMIN' || this.state.role == 'ADMINSALE' ?\n                      dataRole.map((item, i) => {\n                        if (item.Name == currentRole) {\n                          return (\n                            <option selected value={item._id}>{item.Name}</option>\n                          );\n                        }\n                        else {\n                          return (\n                            <option value={item._id}>{item.Name}</option>\n                          );\n                        }\n                      }) : dataRole.map((item, i) => {\n                        if (item.Name == 'SHOPMANAGER') {\n                          return (\n                            <option value={item._id}>{item.Name}</option>\n                          );\n                        }\n                      })\n                  }\n                </select>\n              </div>\n\n              {\n                action == 'new' ? \"\" : <div>\n                  <label style={styles.flexLabel} htmlFor=\"tag\">Trạng thái:</label>\n                  <select style={styles.flexOption} name=\"Status\" onChange={e => this.onChange(\"Status\", e.target.value)}>\n                    <option value={this.state.Status}>{this.state.Status == '' ? ` - - - - - - - - - - ` : this.state.Status}</option>\n                    <option value={'Actived'}>Actived</option>\n                    <option value={'Locked'}>Locked</option>\n                    <option value={'Deactived'}>Deactived</option>\n                  </select>\n                </div>\n              }\n              {/* {\n                this.state.role == 'ADMIN' ? <div>\n                  <label style={styles.flexLabel} htmlFor=\"tag\">Sale:    </label>\n                  <select style={styles.flexOption} name=\"Sale_Id\" onChange={e => this.onChange(\"Sale_Id\", e.target.value)}>\n                    <option value={this.state.Sale_Id}>-----</option>\n                    {\n                      dataSale.map((item, i) => {\n                        if (item.Name == currentSale) {\n                          return (\n                            <option selected value={item._id}>{item.Name}</option>\n                          );\n                        } else {\n                          return (\n                            <option value={item._id}>{item.Name}</option>\n                          );\n                        }\n                      })\n                    }\n                  </select>\n                </div> : \"\"\n              } */}\n\n            </ModalBody>\n            <ModalFooter>\n              <Button color=\"primary\" onClick={e => { this.state.action === 'new' ? this.addUser() : this.updateUser() }} disabled={this.state.isLoading}>Lưu</Button>{' '}\n              <Button color=\"secondary\" onClick={e => this.toggleModal(\"new\")}>Đóng</Button>\n            </ModalFooter>\n          </Modal>\n\n          <Modal isOpen={this.state.modalDelete} toggle={e => this.setState({ modalDelete: !this.state.modalDelete, delete: null })} className={this.props.className}>\n            <ModalHeader toggle={e => this.setState({ modalDelete: !this.state.modalDelete, delete: null })}>{`Xoá`}</ModalHeader>\n            <ModalBody>\n              <label htmlFor=\"tag\">{`Do you want to delete user \"${this.state.delete ? this.state.delete.Email : ''}\" ?`}</label>\n            </ModalBody>\n            <ModalFooter>\n              <Button color=\"primary\" onClick={e => this.delete()} disabled={this.state.isLoading}>Xoá</Button>{' '}\n              <Button color=\"secondary\" onClick={e => this.setState({ modalDelete: !this.state.modalDelete, delete: null })}>Đóng</Button>\n            </ModalFooter>\n          </Modal>\n        </div>\n      );\n    }\n    return (\n      <div className=\"d-flex justify-content-center\">\n        <ReactLoading type={\"balls\"} color={\"orange\"} height={'5%'} width={'5%'} />\n      </div>\n    );\n  }\n}\n\nconst styles = {\n  wa10: {\n    width: \"5%\",\n    float: \"left\",\n    height: \"60px\"\n  },\n  sale_times: {\n    width: \"8%\",\n    float: \"left\",\n    height: \"60px\",\n    textAlign: 'center'\n  },\n  pagination: {\n    marginRight: '5px'\n  },\n  flexLabel: {\n    width: 100\n  },\n  flexOption: {\n    width: 160,\n    margin: '1px'\n  },\n  a: {\n    textDecoration: 'none'\n  },\n  floatRight: {\n    float: \"right\",\n    marginTop: '3px'\n  },\n  spinner: {\n    width: \"30px\"\n  },\n  center: {\n    textAlign: \"center\"\n  },\n  tbody: {\n    height: \"380px\",\n    overflowY: \"auto\"\n  },\n  wh12: {\n    width: \"11%\",\n    float: \"left\",\n    height: \"60px\",\n    textAlign: 'center'\n  },\n  ws12: {\n    width: \"13%\",\n    float: \"left\",\n    height: \"60px\",\n    textAlign: 'center'\n  },\n  wh15: {\n    width: \"15%\",\n    float: \"left\",\n    height: \"60px\",\n    textAlign: 'center'\n  },\n  w5: {\n    width: \"22%\",\n    float: \"left\",\n    height: \"60px\"\n  },\n  w5_10: {\n    width: \"5%\",\n    float: \"left\",\n    height: \"60px\"\n  },\n  row: {\n    float: \"left\",\n    width: \"100%\"\n  },\n  success: {\n    color: 'green'\n  },\n  danger: {\n    color: 'red'\n  },\n  mgl5: {\n    marginLeft: '5px'\n  },\n  tags: {\n    float: \"right\",\n    marginRight: \"5px\"\n  },\n  searchInput: {\n    width: \"160px\",\n    display: 'inline-block',\n    margin: '1px'\n  },\n  userActive: {\n    color: 'green'\n  },\n  userPending: {\n    color: 'red'\n  },\n  nagemonNameCol: {\n    width: '328px'\n  },\n  image: {\n    width: '100px',\n    height: '100px',\n    borderRadius: '99999px'\n  },\n}\n\nconst mapStateToProps = state => {\n  return {\n    data: state.getData_AllAPI\n  }\n}\n\n\nexport default connect(mapStateToProps, { onSaveID, onSaveSeed })(Users);\n\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nconst TextFieldGroup = ({ field, value, label, error, type, onChange, checkUserExists, readOnly, placeholder, onClick }) => {\n  return (\n    <div className={classnames('form-group', { 'has-error': error })}>\n      <label className=\"control-label\">{label}</label>\n      <input\n        onChange={onChange}\n        onClick={onClick}\n        onBlur={checkUserExists}\n        value={value}\n        type={type}\n        name={field}\n        placeholder={placeholder}\n        readOnly={readOnly}\n        className=\"form-control\"\n      />\n    {error && <span className=\"help-block\">{error}</span>}\n    </div>  );\n}\n\nTextFieldGroup.propTypes = {\n  field: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  error: PropTypes.string,\n  type: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  checkUserExists: PropTypes.func\n}\n\nTextFieldGroup.defaultProps = {\n  type: 'text'\n}\n\nexport default TextFieldGroup;\n","import {\n  SAVE_ID_SALE,\n  SAVE_SEED\n} from '../actions.js'\n\nexport function onSaveID(id) {\n  return {\n    type: SAVE_ID_SALE,\n    payload: { id }\n  };\n}\n\nexport function onSaveSeed(seed) {\n  return {\n    type: SAVE_SEED,\n    payload: { seed }\n  };\n}\n"],"sourceRoot":""}