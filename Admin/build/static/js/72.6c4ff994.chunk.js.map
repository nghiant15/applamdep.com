{"version":3,"sources":["../node_modules/reactstrap/es/CardBody.js","../node_modules/reactstrap/es/Button.js","../node_modules/reactstrap/es/Card.js","../node_modules/reactstrap/es/CardHeader.js","../node_modules/multiselect-react-dropdown/dist/index.js","../../node_modules/style-inject/dist/style-inject.es.js","../../src/multiselect/multiselect.component.tsx"],"names":["propTypes","tag","tagPropType","className","PropTypes","string","cssModule","object","innerRef","oneOfType","func","CardBody","props","Tag","attributes","_objectWithoutPropertiesLoose","classes","mapToCssModules","classNames","React","createElement","_extends","ref","defaultProps","active","bool","block","color","disabled","outline","onClick","size","children","node","close","Button","_React$Component","_this","call","this","bind","_assertThisInitialized","_inheritsLoose","_proto","prototype","e","preventDefault","render","_this$props","ariaLabel","btnOutlineColor","href","defaultAriaLabel","type","undefined","Component","inverse","body","Card","CardHeader","module","exports","require","css","insertAt","document","head","getElementsByTagName","style","firstChild","insertBefore","appendChild","styleSheet","cssText","createTextNode","closeIconTypes","circle","circle2","cancel","Multiselect","state","inputValue","options","filteredOptions","unfilteredOptions","selectedValues","Object","assign","preSelectedValues","toggleOptionsList","highlightOption","avoidHighlightFirstOption","showCheckbox","keepSearchTerm","groupedObject","closeIconType","closeIcon","optionTimeout","n","searchWrapper","createRef","searchBox","onChange","onFocus","onBlur","renderMultiselectContainer","renderSelectedList","onRemoveSelectedItem","toggelOptionList","onArrowKeyNavigation","onSelectItem","filterOptionsByInput","removeSelectedValuesFromOptions","isSelectedValue","fadeOutSelection","isDisablePreSelectedValues","renderGroupByOptions","renderNormalOption","listenerCallback","resetSelectedValues","getSelectedItems","getSelectedItemsCount","hideOnClickOutside","isVisible","groupBy","singleSelect","groupByOptions","Promise","resolve","_this2","setState","initialSetValue","length","current","addEventListener","prevProps","prevSelectedvalues","JSON","stringify","focus","clearTimeout","removeEventListener","skipCheck","isObject","displayValue","optionList","filter","findIndex","v","item","indexOf","reduce","r","a","key","push","create","event","onSearch","target","value","_this3","matchValues","i","search","caseSensitiveSearch","toLowerCase","toString","keyCode","disablePreSelectedValues","previousState","index","onRemove","splice","_this4","closeOnSelect","selectionLimit","onSelect","onSingleSelect","_this5","emptyRecordMsg","loadingMessage","loading","keys","map","Fragment","obj","option","_this6","readOnly","checked","_this7","customCloseIcon","_this8","src","setTimeout","elem","offsetWidth","offsetHeight","getClientRects","element","getElementsByClassName","contains","_this9","placeholder","id","hidePlaceholder","disable","showArrow","onKeyDown","autoComplete","renderOptionList"],"mappings":"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","file":"static/js/72.6c4ff994.chunk.js","sourcesContent":["import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.func])\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar CardBody = function CardBody(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      innerRef = props.innerRef,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"innerRef\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card-body'), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    ref: innerRef\n  }));\n};\n\nCardBody.propTypes = propTypes;\nCardBody.defaultProps = defaultProps;\nexport default CardBody;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport _assertThisInitialized from \"@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inheritsLoose from \"@babel/runtime/helpers/esm/inheritsLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  active: PropTypes.bool,\n  'aria-label': PropTypes.string,\n  block: PropTypes.bool,\n  color: PropTypes.string,\n  disabled: PropTypes.bool,\n  outline: PropTypes.bool,\n  tag: tagPropType,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.func, PropTypes.string]),\n  onClick: PropTypes.func,\n  size: PropTypes.string,\n  children: PropTypes.node,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  close: PropTypes.bool\n};\nvar defaultProps = {\n  color: 'secondary',\n  tag: 'button'\n};\n\nvar Button = /*#__PURE__*/function (_React$Component) {\n  _inheritsLoose(Button, _React$Component);\n\n  function Button(props) {\n    var _this;\n\n    _this = _React$Component.call(this, props) || this;\n    _this.onClick = _this.onClick.bind(_assertThisInitialized(_this));\n    return _this;\n  }\n\n  var _proto = Button.prototype;\n\n  _proto.onClick = function onClick(e) {\n    if (this.props.disabled) {\n      e.preventDefault();\n      return;\n    }\n\n    if (this.props.onClick) {\n      return this.props.onClick(e);\n    }\n  };\n\n  _proto.render = function render() {\n    var _this$props = this.props,\n        active = _this$props.active,\n        ariaLabel = _this$props['aria-label'],\n        block = _this$props.block,\n        className = _this$props.className,\n        close = _this$props.close,\n        cssModule = _this$props.cssModule,\n        color = _this$props.color,\n        outline = _this$props.outline,\n        size = _this$props.size,\n        Tag = _this$props.tag,\n        innerRef = _this$props.innerRef,\n        attributes = _objectWithoutPropertiesLoose(_this$props, [\"active\", \"aria-label\", \"block\", \"className\", \"close\", \"cssModule\", \"color\", \"outline\", \"size\", \"tag\", \"innerRef\"]);\n\n    if (close && typeof attributes.children === 'undefined') {\n      attributes.children = /*#__PURE__*/React.createElement(\"span\", {\n        \"aria-hidden\": true\n      }, \"\\xD7\");\n    }\n\n    var btnOutlineColor = \"btn\" + (outline ? '-outline' : '') + \"-\" + color;\n    var classes = mapToCssModules(classNames(className, {\n      close: close\n    }, close || 'btn', close || btnOutlineColor, size ? \"btn-\" + size : false, block ? 'btn-block' : false, {\n      active: active,\n      disabled: this.props.disabled\n    }), cssModule);\n\n    if (attributes.href && Tag === 'button') {\n      Tag = 'a';\n    }\n\n    var defaultAriaLabel = close ? 'Close' : null;\n    return /*#__PURE__*/React.createElement(Tag, _extends({\n      type: Tag === 'button' && attributes.onClick ? 'button' : undefined\n    }, attributes, {\n      className: classes,\n      ref: innerRef,\n      onClick: this.onClick,\n      \"aria-label\": ariaLabel || defaultAriaLabel\n    }));\n  };\n\n  return Button;\n}(React.Component);\n\nButton.propTypes = propTypes;\nButton.defaultProps = defaultProps;\nexport default Button;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  inverse: PropTypes.bool,\n  color: PropTypes.string,\n  body: PropTypes.bool,\n  outline: PropTypes.bool,\n  className: PropTypes.string,\n  cssModule: PropTypes.object,\n  innerRef: PropTypes.oneOfType([PropTypes.object, PropTypes.string, PropTypes.func])\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar Card = function Card(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      color = props.color,\n      body = props.body,\n      inverse = props.inverse,\n      outline = props.outline,\n      Tag = props.tag,\n      innerRef = props.innerRef,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"color\", \"body\", \"inverse\", \"outline\", \"tag\", \"innerRef\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card', inverse ? 'text-white' : false, body ? 'card-body' : false, color ? (outline ? 'border' : 'bg') + \"-\" + color : false), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes,\n    ref: innerRef\n  }));\n};\n\nCard.propTypes = propTypes;\nCard.defaultProps = defaultProps;\nexport default Card;","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutPropertiesLoose from \"@babel/runtime/helpers/esm/objectWithoutPropertiesLoose\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classNames from 'classnames';\nimport { mapToCssModules, tagPropType } from './utils';\nvar propTypes = {\n  tag: tagPropType,\n  className: PropTypes.string,\n  cssModule: PropTypes.object\n};\nvar defaultProps = {\n  tag: 'div'\n};\n\nvar CardHeader = function CardHeader(props) {\n  var className = props.className,\n      cssModule = props.cssModule,\n      Tag = props.tag,\n      attributes = _objectWithoutPropertiesLoose(props, [\"className\", \"cssModule\", \"tag\"]);\n\n  var classes = mapToCssModules(classNames(className, 'card-header'), cssModule);\n  return /*#__PURE__*/React.createElement(Tag, _extends({}, attributes, {\n    className: classes\n  }));\n};\n\nCardHeader.propTypes = propTypes;\nCardHeader.defaultProps = defaultProps;\nexport default CardHeader;","\n'use strict'\n\nif (process.env.NODE_ENV === 'production') {\n  module.exports = require('./multiselect-react-dropdown.cjs.production.min.js')\n} else {\n  module.exports = require('./multiselect-react-dropdown.cjs.development.js')\n}\n","function styleInject(css, ref) {\n  if ( ref === void 0 ) ref = {};\n  var insertAt = ref.insertAt;\n\n  if (!css || typeof document === 'undefined') { return; }\n\n  var head = document.head || document.getElementsByTagName('head')[0];\n  var style = document.createElement('style');\n  style.type = 'text/css';\n\n  if (insertAt === 'top') {\n    if (head.firstChild) {\n      head.insertBefore(style, head.firstChild);\n    } else {\n      head.appendChild(style);\n    }\n  } else {\n    head.appendChild(style);\n  }\n\n  if (style.styleSheet) {\n    style.styleSheet.cssText = css;\n  } else {\n    style.appendChild(document.createTextNode(css));\n  }\n}\n\nexport default styleInject;\n","// @ts-nocheck\nimport React from \"react\";\nimport \"./styles.css\";\nimport CloseCircle from '../assets/svg/closeCircle.svg';\nimport CloseCircleDark from '../assets/svg/closeCircleDark.svg';\nimport CloseLine from '../assets/svg/closeLine.svg';\nimport CloseSquare from '../assets/svg/closeSquare.svg';\nimport DownArrow from '../assets/svg/downArrow.svg';\nimport { IMultiselectProps } from \"./interface\";\n\nconst closeIconTypes = {\n  circle: CloseCircleDark,\n  circle2: CloseCircle,\n  close: CloseSquare,\n  cancel: CloseLine\n};\n\nexport class Multiselect extends React.Component<IMultiselectProps, any> {\n  static defaultProps: { options: never[]; disablePreSelectedValues: boolean; selectedValues: never[]; isObject: boolean; displayValue: string; showCheckbox: boolean; selectionLimit: number; placeholder: string; groupBy: string; style: {}; emptyRecordMsg: string; onSelect: () => void; onRemove: () => void; closeIcon: string; singleSelect: boolean; caseSensitiveSearch: boolean; id: string; closeOnSelect: boolean; avoidHighlightFirstOption: boolean; hidePlaceholder: boolean; showArrow: boolean; keepSearchTerm: boolean; };\n  constructor(props) {\n    super(props);\n    this.state = {\n      inputValue: \"\",\n      options: props.options,\n      filteredOptions: props.options,\n      unfilteredOptions: props.options,\n      selectedValues: Object.assign([], props.selectedValues),\n      preSelectedValues: Object.assign([], props.selectedValues),\n      toggleOptionsList: false,\n      highlightOption: props.avoidHighlightFirstOption ? -1 : 0,\n\t\t\tshowCheckbox: props.showCheckbox,\n      keepSearchTerm: props.keepSearchTerm,\n      groupedObject: [],\n      closeIconType: closeIconTypes[props.closeIcon] || closeIconTypes['circle']\n    };\n    // @ts-ignore\n    this.optionTimeout = null;\n    // @ts-ignore\n\t\tthis.searchWrapper = React.createRef();\n    // @ts-ignore\n\t\tthis.searchBox = React.createRef();\n    this.onChange = this.onChange.bind(this);\n    this.onFocus = this.onFocus.bind(this);\n    this.onBlur = this.onBlur.bind(this);\n    this.renderMultiselectContainer = this.renderMultiselectContainer.bind(this);\n    this.renderSelectedList = this.renderSelectedList.bind(this);\n    this.onRemoveSelectedItem = this.onRemoveSelectedItem.bind(this);\n    this.toggelOptionList = this.toggelOptionList.bind(this);\n    this.onArrowKeyNavigation = this.onArrowKeyNavigation.bind(this);\n    this.onSelectItem = this.onSelectItem.bind(this);\n    this.filterOptionsByInput = this.filterOptionsByInput.bind(this);\n    this.removeSelectedValuesFromOptions = this.removeSelectedValuesFromOptions.bind(this);\n    this.isSelectedValue = this.isSelectedValue.bind(this);\n    this.fadeOutSelection = this.fadeOutSelection.bind(this);\n    this.isDisablePreSelectedValues = this.isDisablePreSelectedValues.bind(this);\n    this.renderGroupByOptions = this.renderGroupByOptions.bind(this);\n    this.renderNormalOption = this.renderNormalOption.bind(this);\n    this.listenerCallback = this.listenerCallback.bind(this);\n    this.resetSelectedValues = this.resetSelectedValues.bind(this);\n    this.getSelectedItems = this.getSelectedItems.bind(this);\n    this.getSelectedItemsCount = this.getSelectedItemsCount.bind(this);\n    this.hideOnClickOutside = this.hideOnClickOutside.bind(this);\n    this.isVisible = this.isVisible.bind(this);\n  }\n\n  initialSetValue() {\n    const { showCheckbox, groupBy, singleSelect } = this.props;\n\t\tconst { options } = this.state;\n    if (!showCheckbox && !singleSelect) {\n      this.removeSelectedValuesFromOptions(false);\n\t\t} \n    // if (singleSelect) {\n    //   this.hideOnClickOutside();\n    // }\n\t\tif (groupBy && showCheckbox) {\n\t\t\tthis.groupByOptions(options);\n\t\t}\n  }\n\n  resetSelectedValues() {\n    const { unfilteredOptions } = this.state;\n    return new Promise((resolve) => {\n      this.setState({\n        selectedValues: [],\n        preSelectedValues: [],\n        options: unfilteredOptions,\n        filteredOptions: unfilteredOptions\n      }, () => {\n        // @ts-ignore\n        resolve();\n        this.initialSetValue();\n      });\n    });\n  }\n\n  getSelectedItems() {\n    return this.state.selectedValues;\n  }\n\n  getSelectedItemsCount() {\n    return this.state.selectedValues.length;\n  }\n\n  componentDidMount() {\n\t\tthis.initialSetValue();\n    // @ts-ignore\n    this.searchWrapper.current.addEventListener(\"click\", this.listenerCallback);\n  }\n\n  componentDidUpdate(prevProps) {\n    const { options, selectedValues } = this.props;\n    const { options: prevOptions, selectedValues: prevSelectedvalues } = prevProps;\n    if (JSON.stringify(prevOptions) !== JSON.stringify(options)) {\n      this.setState({ options, filteredOptions: options, unfilteredOptions: options }, this.initialSetValue);\n    }\n    if (JSON.stringify(prevSelectedvalues) !== JSON.stringify(selectedValues)) {\n      this.setState({ selectedValues: Object.assign([], selectedValues), preSelectedValues: Object.assign([], selectedValues) }, this.initialSetValue);\n    }\n  }\n\n  listenerCallback() {\n    // @ts-ignore\n    this.searchBox.current.focus();\n  }\n\n  componentWillUnmount() {\n    // @ts-ignore\n    if (this.optionTimeout) {\n      // @ts-ignore\n      clearTimeout(this.optionTimeout);\n    }\n    // @ts-ignore\n    this.searchWrapper.current.removeEventListener('click', this.listenerCallback);\n  }\n\n  // Skipcheck flag - value will be true when the func called from on deselect anything.\n  removeSelectedValuesFromOptions(skipCheck) {\n    const { isObject, displayValue, groupBy } = this.props;\n    const { selectedValues = [], unfilteredOptions, options } = this.state;\n    if (!skipCheck && groupBy) {\n      this.groupByOptions(options);\n    }\n    if (!selectedValues.length && !skipCheck) {\n      return;\n    }\n    if (isObject) {\n      let optionList = unfilteredOptions.filter(item => {\n        return selectedValues.findIndex(\n          v => v[displayValue] === item[displayValue]\n        ) === -1\n          ? true\n          : false;\n      });\n      if (groupBy) {\n        this.groupByOptions(optionList);\n      }\n      this.setState(\n        { options: optionList, filteredOptions: optionList },\n        this.filterOptionsByInput\n      );\n      return;\n    }\n    let optionList = unfilteredOptions.filter(\n      item => selectedValues.indexOf(item) === -1\n    );\n\n    this.setState(\n      { options: optionList, filteredOptions: optionList },\n      this.filterOptionsByInput\n    );\n  }\n\n  groupByOptions(options) {\n    const { groupBy } = this.props;\n    const groupedObject = options.reduce(function(r, a) {\n      const key = a[groupBy] || \"Others\";\n      r[key] = r[key] || [];\n      r[key].push(a);\n      return r;\n    }, Object.create({}));\n    \n    this.setState({ groupedObject });\n  }\n\n  onChange(event) {\n    const { onSearch } = this.props;\n    this.setState(\n      { inputValue: event.target.value },\n      this.filterOptionsByInput\n    );\n    if (onSearch) {\n      onSearch(event.target.value);\n    }\n  }\n\n  filterOptionsByInput() {\n    let { options, filteredOptions, inputValue } = this.state;\n    const { isObject, displayValue } = this.props;\n    if (isObject) {\n      options = filteredOptions.filter(i => this.matchValues(i[displayValue], inputValue))\n    } else {\n      options = filteredOptions.filter(i => this.matchValues(i, inputValue));\n    }\n    this.groupByOptions(options);\n    this.setState({ options });\n  }\n\n  matchValues(value, search) {\n    if (this.props.caseSensitiveSearch) {\n      return value.indexOf(search) > -1;\n    }\n    if (value.toLowerCase) {\n      return value.toLowerCase().indexOf(search.toLowerCase()) > -1;\n    }\n    return value.toString().indexOf(search) > -1;\n  }\n\n  onArrowKeyNavigation(e) {\n    const {\n      options,\n      highlightOption,\n      toggleOptionsList,\n      inputValue,\n      selectedValues\n    } = this.state;\n    const { disablePreSelectedValues } = this.props;\n    if (e.keyCode === 8 && !inputValue && !disablePreSelectedValues && selectedValues.length) {\n      this.onRemoveSelectedItem(selectedValues.length - 1);\n    }\n    if (!options.length) {\n      return;\n    }\n    if (e.keyCode === 38) {\n      if (highlightOption > 0) {\n        this.setState(previousState => ({\n          highlightOption: previousState.highlightOption - 1\n        }));\n      } else {\n        this.setState({ highlightOption: options.length - 1 });\n      }\n    } else if (e.keyCode === 40) {\n      if (highlightOption < options.length - 1) {\n        this.setState(previousState => ({\n          highlightOption: previousState.highlightOption + 1\n        }));\n      } else {\n        this.setState({ highlightOption: 0 });\n      }\n    } else if (e.key === \"Enter\" && options.length && toggleOptionsList) {\n      if (highlightOption === -1) {\n        return;\n      }\n      this.onSelectItem(options[highlightOption]);\n    }\n    // TODO: Instead of scrollIntoView need to find better soln for scroll the dropwdown container.\n    // setTimeout(() => {\n    //   const element = document.querySelector(\"ul.optionContainer .highlight\");\n    //   if (element) {\n    //     element.scrollIntoView();\n    //   }\n    // });\n  }\n\n  onRemoveSelectedItem(item) {\n\t\tlet { selectedValues, index = 0 } = this.state;\n\t\tconst { onRemove, showCheckbox, displayValue, isObject } = this.props;\n    if (isObject) {\n      index = selectedValues.findIndex(\n        i => i[displayValue] === item[displayValue]\n      );\n    } else {\n      index = selectedValues.indexOf(item);\n    }\n\t\tselectedValues.splice(index, 1);\n\t\tonRemove(selectedValues, item);\n    this.setState({ selectedValues }, () => {\n      if (!showCheckbox) {\n\t\t\t\tthis.removeSelectedValuesFromOptions(true);\n      }\n    });\n    if (!this.props.closeOnSelect) {\n      // @ts-ignore\n      this.searchBox.current.focus();\n    }\n  }\n\n  onSelectItem(item) {\n    const { selectedValues } = this.state;\n    const { selectionLimit, onSelect, singleSelect, showCheckbox } = this.props;\n    if (!this.state.keepSearchTerm){\n      this.setState({\n        inputValue: ''\n      });\n    }\n    if (singleSelect) {\n      this.onSingleSelect(item);\n      onSelect([item], item);\n      return;\n    }\n    if (this.isSelectedValue(item)) {\n      this.onRemoveSelectedItem(item);\n      return;\n    }\n    if (selectionLimit == selectedValues.length) {\n      return;\n    }\n\t\tselectedValues.push(item);\n\t\tonSelect(selectedValues, item);\n    this.setState({ selectedValues }, () => {\n      if (!showCheckbox) {\n\t\t\t\tthis.removeSelectedValuesFromOptions(true);\n      } else {\n        this.filterOptionsByInput();\n      }\n    });\n    if (!this.props.closeOnSelect) {\n      // @ts-ignore\n      this.searchBox.current.focus();\n    }\n  }\n\n  onSingleSelect(item) {\n    this.setState({ selectedValues: [item], toggleOptionsList: false });\n  }\n\n  isSelectedValue(item) {\n    const { isObject, displayValue } = this.props;\n    const { selectedValues } = this.state;\n    if (isObject) {\n      return (\n        selectedValues.filter(i => i[displayValue] === item[displayValue])\n          .length > 0\n      );\n    }\n    return selectedValues.filter(i => i === item).length > 0;\n  }\n\n  renderOptionList() {\n    const { groupBy, style, emptyRecordMsg, loading, loadingMessage = 'loading...' } = this.props;\n    const { options } = this.state;\n    if (loading) {\n      return (\n        <ul className={`optionContainer`} style={style['optionContainer']}>\n          {typeof loadingMessage === 'string' && <span style={style['loadingMessage']} className={`notFound`}>{loadingMessage}</span>}\n          {typeof loadingMessage !== 'string' && loadingMessage}\n        </ul>\n      );\n    }\n    return (\n      <ul className={`optionContainer`} style={style['optionContainer']}>\n        {options.length === 0 && <span style={style['notFound']} className={`notFound`}>{emptyRecordMsg}</span>}\n        {!groupBy ? this.renderNormalOption() : this.renderGroupByOptions()}\n      </ul>\n    );\n  }\n\n  renderGroupByOptions() {\n    const { isObject = false, displayValue, showCheckbox, style, singleSelect } = this.props;\n    const { groupedObject } = this.state;\n    return Object.keys(groupedObject).map(obj => {\n\t\t\treturn (\n\t\t\t\t<React.Fragment key={obj}>\n\t\t\t\t\t<li className=\"groupHeading\" style={style['groupHeading']}>{obj}</li>\n\t\t\t\t\t{groupedObject[obj].map((option, i) => (\n\t\t\t\t\t\t<li\n\t\t\t\t\t\t\tkey={`option${i}`}\n\t\t\t\t\t\t\tstyle={style['option']}\n              className={`\n               groupChildEle ${this.fadeOutSelection(option) && 'disableSelection'}\n                ${this.isDisablePreSelectedValues(option) && 'disableSelection'} option\n              `}\n\t\t\t\t\t\t\tonClick={() => this.onSelectItem(option)}\n\t\t\t\t\t\t>\n\t\t\t\t\t\t\t{showCheckbox && !singleSelect && (\n                  <input\n                    type=\"checkbox\"\n                    className={'checkbox'}\n                    readOnly\n                    checked={this.isSelectedValue(option)}\n                  />\n\t\t\t\t\t\t\t)}\n\t\t\t\t\t\t\t{isObject ? option[displayValue] : (option || '').toString()}\n\t\t\t\t\t\t</li>\n\t\t\t\t\t))}\n\t\t\t\t</React.Fragment>\n\t\t\t)\n\t\t});\n  }\n\n  renderNormalOption() {\n    const { isObject = false, displayValue, showCheckbox, style, singleSelect } = this.props;\n    const { highlightOption } = this.state;\n    return this.state.options.map((option, i) => (\n          <li\n            key={`option${i}`}\n            style={style['option']}\n            className={`\n              ${highlightOption === i ? `highlightOption highlight` : \"\"} \n              ${this.fadeOutSelection(option) && 'disableSelection'} \n              ${this.isDisablePreSelectedValues(option) && 'disableSelection'} option\n            `}\n            onClick={() => this.onSelectItem(option)}\n          >\n            {showCheckbox && !singleSelect && (\n              <input\n                type=\"checkbox\"\n                readOnly\n                className={`checkbox`}\n                checked={this.isSelectedValue(option)}\n              />\n            )}\n            {isObject ? option[displayValue] : (option || '').toString()}\n          </li>\n    ));\n  }\n\n  renderSelectedList() {\n    const { isObject = false, displayValue, style, singleSelect, customCloseIcon } = this.props;\n    const { selectedValues, closeIconType } = this.state;\n    return selectedValues.map((value, index) => (\n      <span className={`chip  ${singleSelect && 'singleChip'} ${this.isDisablePreSelectedValues(value) && 'disableSelection'}`} key={index} style={style['chips']}>\n        {!isObject ? (value || '').toString() : value[displayValue]}\n        {!this.isDisablePreSelectedValues(value) && (!customCloseIcon ? <img\n          className=\"icon_cancel closeIcon\"\n          src={closeIconType}\n          onClick={() => this.onRemoveSelectedItem(value)}\n        /> : <i className=\"custom-close\" onClick={() => this.onRemoveSelectedItem(value)}>{customCloseIcon}</i>)}\n      </span>\n    ));\n  }\n\n  isDisablePreSelectedValues(value) {\n    const { isObject, disablePreSelectedValues, displayValue } = this.props;\n    const { preSelectedValues } = this.state;\n    if (!disablePreSelectedValues || !preSelectedValues.length) {\n      return false;\n    }\n    if (isObject) {\n      return (\n        preSelectedValues.filter(i => i[displayValue] === value[displayValue])\n          .length > 0\n      );\n    }\n    return preSelectedValues.filter(i => i === value).length > 0;\n  }\n\n  fadeOutSelection(item) {\n    const { selectionLimit, showCheckbox, singleSelect } = this.props;\n    if (singleSelect) {\n      return;\n    }\n    const { selectedValues } = this.state;\n    if (selectionLimit == -1) {\n      return false;\n    }\n    if (selectionLimit != selectedValues.length) {\n      return false;\n    }\n    if (selectionLimit == selectedValues.length) {\n      if (!showCheckbox) {\n        return true;\n      } else {\n        if (this.isSelectedValue(item)) {\n          return false;\n        }\n        return true;\n      }\n    }\n  }\n\n  toggelOptionList() {\n    this.setState({\n      toggleOptionsList: !this.state.toggleOptionsList,\n      highlightOption: this.props.avoidHighlightFirstOption ? -1 : 0\n    });\n  }\n\n  onFocus(){\n    if (this.state.toggleOptionsList) {\n      // @ts-ignore\n      clearTimeout(this.optionTimeout);\n    } else {\n      this.toggelOptionList();\n    }\n  }\n\n  onBlur(){\n    // @ts-ignore\n    this.optionTimeout = setTimeout(this.toggelOptionList, 250);\n  }\n\n  isVisible(elem) {\n    return !!elem && !!( elem.offsetWidth || elem.offsetHeight || elem.getClientRects().length )\n  }\n\n  hideOnClickOutside() {\n    const element = document.getElementsByClassName('multiselect-container')[0];\n    const outsideClickListener = event => {\n        if (element && !element.contains(event.target) && this.isVisible(element)) {\n          this.toggelOptionList();\n        }\n    }\n    document.addEventListener('click', outsideClickListener)\n  }\n\n  renderMultiselectContainer() {\n    const { inputValue, toggleOptionsList, selectedValues } = this.state;\n    const { placeholder, style, singleSelect, id, hidePlaceholder, disable, showArrow} = this.props;\n    return (\n      <div className={`multiselect-container multiSelectContainer ${disable ? `disable_ms` : ''}`} id={id || 'multiselectContainerReact'} style={style['multiselectContainer']}>\n        <div className={`search-wrapper searchWrapper ${singleSelect ? 'singleSelect' : ''}`} \n          ref={this.searchWrapper} style={style['searchBox']} \n          onClick={singleSelect ? this.toggelOptionList : () => {}}\n        >\n          {this.renderSelectedList()}\n          <input\n\t\t\t\t\t\ttype=\"text\"\n\t\t\t\t\t\tref={this.searchBox}\n            className=\"searchBox\"\n            id={`${id || 'search'}_input`}\n            onChange={this.onChange}\n            value={inputValue}\n            onFocus={this.onFocus}\n            onBlur={this.onBlur}\n            placeholder={((singleSelect && selectedValues.length) || (hidePlaceholder && selectedValues.length)) ? '' : placeholder}\n            onKeyDown={this.onArrowKeyNavigation}\n            style={style['inputField']}\n            autoComplete=\"off\"\n            disabled={singleSelect || disable}\n          />\n          {(singleSelect || showArrow) && <img\n            src={DownArrow}\n            className={`icon_cancel icon_down_dir`}\n          />}\n        </div>\n        <div\n          className={`optionListContainer ${\n            toggleOptionsList ? 'displayBlock' : 'displayNone'\n          }`}\n        >\n          {this.renderOptionList()}\n        </div>\n      </div>\n    );\n  }\n\n  render() {\n    return this.renderMultiselectContainer();\n  }\n}\n\nMultiselect.defaultProps = {\n  options: [],\n  disablePreSelectedValues: false,\n  selectedValues: [],\n  isObject: true,\n  displayValue: \"model\",\n  showCheckbox: false,\n  selectionLimit: -1,\n  placeholder: \"Select\",\n\tgroupBy: \"\",\n\tstyle: {},\n\temptyRecordMsg: \"No Options Available\",\n\tonSelect: () => {},\n  onRemove: () => {},\n  closeIcon: 'circle2',\n  singleSelect: false,\n  caseSensitiveSearch: false,\n  id: '',\n  closeOnSelect: true,\n  avoidHighlightFirstOption: false,\n  hidePlaceholder: false,\n  showArrow: false,\n  keepSearchTerm: false,\n  customCloseIcon: ''\n};\n"],"sourceRoot":""}