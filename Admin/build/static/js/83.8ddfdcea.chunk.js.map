{"version":3,"sources":["views/tuvan/configWeb/BannerAia.js","views/tuvan/configWeb/GameConfig.js","views/tuvan/configWeb/dataList.js","views/tuvan/configBeauty.js","views/tuvan/configWeb/Content.js","views/tuvan/configWeb/gameUser.js","views/Common/TextFieldGroup.js","views/components/Iframe.js"],"names":["Component","Seo","setStateByName","name","value","props","onChangeImage","e","name_link","name_show","getTimeConver","datetime","moment","format","this","SaveAllConfigWeb","className","Button","variant","color","onClick","FormGroup","Label","Input","placeholder","type","messengerLink","onChange","target","zaloLink","Voucher","getstatusItem","status","state","modalCom","scoreInput","scoreMaxInput","statusInput","setState","item","console","log","scoreMax","id","_id","score","valueselect","key","val","openModal","window","location","reload","bodyRequest","axios","post","baseUrlapi","then","res","Swal","fire","title","timer","reloadPage","class","dataListBeauty","map","i","x","dataCompany","find","companyId","compnayName","Name","outline","editdata","Modal","isOpen","ModalHeader","ModalBody","TextFieldGroup","field","label","custom","size","ModalFooter","saveBeauty","headers","Headers","auth","localStorage","getItem","append","ConfigWeb","valueLink","valueShow","files","reader","FileReader","readAsDataURL","onload","result","change","a","Constants","BASE_URL","url","newComany_id","company_id","tabNameConfig","icon","IoLogoBuffer","style","width","height","JSON","parse","poupintro","pupupSuccess","popupfail","fromDate","todate","fromtime","totime","dataGame","tabcontent","tablinks","document","getElementsByClassName","length","classList","add","remove","replace","animation","getAllDataCompany","getDataConfigWeb","setTimeout","getDataBeautyUser","ToggleViewConfigWeb","List_All_company","params","data","get","Output_newComany_id","dataGame1","isLoading","css","override","loading","speedMultiplier","List","sx","maxWidth","bgcolor","component","aria-labelledby","ListItemButton","pl","ListItemIcon","ListItemText","fontSize","primary","undefined","error","checkUserExists","readOnly","classnames","onBlur","defaultProps","Iframe","toggleView","link","closeModal","show","closeButton","display","position"],"mappings":"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","file":"static/js/83.8ddfdcea.chunk.js","sourcesContent":["import { Component } from \"react\";\nimport { Button } from \"reactstrap\";\nimport TextFieldGroup from \"../../Common/TextFieldGroup\";\n\nexport default class BannerAia extends Component {\n  \n    SaveAllConfigWeb(value) {\n        this.props.SaveAllConfigWeb(value);\n    }\n    setStateByName = (name, value) => {\n        this.props.setStateByName(name, value);\n      };\n    onChangeImage=(e, name, name_link, name_show) =>{\n        this.props.onChangeImage(e, name, name_link, name_show);\n    }\n\n  render() {\n      \n    return (\n      <>\n        <div class=\"text-center\">\n          <Button\n            variant=\"contained\"\n            color=\"success\"\n            onClick={() => this.SaveAllConfigWeb(\"banner\")}\n          >\n            Lưu thay đổi\n          </Button>\n        </div>\n        <div class=\"mt-3\">\n          <h1>Banner trên PC</h1>\n          <TextFieldGroup\n            field=\"image\"\n            label=\"Hình ảnh\"\n            type={\"file\"}\n            onChange={(e) => this.onChangeImage(\n                e,\n                \"imageBannerDesktop\",\n                \"imageBannerDesktop_link\",\n                \"imageBannerDesktop_show\"\n              )}\n            onClick={(e) => {e.target.value = null;this.setStateByName(\"imageBannerDesktop_show\", \"\")}} \n   \n          />\n          <div class=\"text-center\">\n            <img\n              alt=\"\"\n              style={{ width: \"400px\" }}\n              height=\"auto\"\n              src={this.props.imageBannerDesktop}\n            />\n          </div>\n          <TextFieldGroup\n            field=\"hrefImageBannerDesktop\"\n            label=\"Đường dẫn(Nếu có)\"\n            value={this.props.hrefImageBannerDesktop}\n            placeholder=\"\"\n            type={\"text\"}\n            className=\"mt-3\"\n            onChange={(e) => {\n                this.setStateByName(\"hrefImageBannerDesktop\", e.target.value);\n              }}\n            \n          />\n        </div>\n        <hr />\n        <div class=\"mt-3\">\n          <h1>Banner trên điện thoại</h1>\n          <TextFieldGroup\n            field=\"image\"\n            label=\"Hình ảnh\"\n            type={\"file\"}\n            onChange={(e) => {\n              this.onChangeImage(\n                e,\n                \"imageBannerMobile\",\n                \"imageBannerMobile_link\",\n                \"imageBannerMobile_show\"\n              );\n            }}\n            onClick={(e) => {e.target.value = null;this.setStateByName(\"imageBannerMobile_show\", \"\")}} \n          />\n          <div class=\"text-center\">\n            <img\n              alt=\"\"\n              style={{ width: \"400px\" }}\n              height=\"auto\"\n              src={this.props.imageBannerMobile}\n            />\n          </div>\n          <TextFieldGroup\n            field=\"hrefImageBannerMobile\"\n            label=\"Đường dẫn(Nếu có)\"\n            value={this.props.hrefImageBannerMobile}\n            placeholder=\"\"\n            type={\"text\"}\n            className=\"mt-3\"\n            onChange={(e) => {\n              this.setStateByName(\"hrefImageBannerMobile\", e.target.value);\n            }}\n          />\n        </div>\n      </>\n    );\n  }\n}\n","import { Component } from \"react\";\nimport moment from 'moment'\nimport TextFieldGroup from \"../../Common/TextFieldGroup\";\nimport { Button, FormGroup, Label,Input  } from \"reactstrap\";\nimport {\n\n  CLabel, CSelect, CRow, CCol\n} from \"@coreui/react\";\n\n\nexport default class Seo extends Component {\n  SaveAllConfigWeb() {\n    this.props.SaveAllConfigWeb();\n  }\n  setStateByName = (name, value) => {\n    this.props.setStateByName(name, value);\n  };\n  onChangeImage=(e, name, name_link, name_show) =>{\n    this.props.onChangeImage(e, name, name_link, name_show);\n}\ngetTimeConver = (datetime) => {\n  if(datetime ==null )\n          return '';\n   return  moment(datetime).format('YYYY-MM-DD');\n\n}\n\n  render() {\n    \n    return (\n      <>\n        <div className=\"text-center\">\n          <Button\n            variant=\"contained\"\n            color=\"success\"\n            onClick={() => this.SaveAllConfigWeb()}\n          >\n            Lưu thay đổi\n          </Button>\n        </div>\n\n          \n      <FormGroup>\n    <Label >\n      Link tư vấn messenger:\n    </Label>\n    <Input\n      name =\"messengerLink\"\n      placeholder=\"Tư vấn messenger\"\n      type=\"text\"\n      value={this.props.messengerLink}\n      onChange={(e) => {\n        this.setStateByName( \"messengerLink\", e.target.value );\n      }}\n    />\n  </FormGroup>\n     \n  <FormGroup>\n    <Label >\n    Link tư vấn Zalo:\n    </Label>\n    <Input\n      name =\"zaloLink\"\n      placeholder=\"Tư vấn zalo\"\n      type=\"text\"\n      value={this.props.zaloLink}\n      onChange={(e) => {\n        this.setStateByName( \"zaloLink\", e.target.value );\n      }}\n    />\n  </FormGroup>\n\n\n\n        </>\n    );\n  }\n}\n","import { Component } from \"react\";\n\nimport CIcon from '@coreui/icons-react';\n\nimport {\n\nCSelect\n} from \"@coreui/react\";\nimport axios from \"axios\";\nimport TextFieldGroup from \"../../Common/TextFieldGroup\";\nimport { Button } from \"reactstrap\";\nimport {\n  CButton\n} from '@coreui/react'\nimport {\n  Card,\n  CardBody,\n  CardHeader,\n  Col,\n  Row,\n  Input,\n  ModalHeader, ModalBody, ModalFooter, Modal,\n\n} from 'reactstrap';\nimport Swal from 'sweetalert2';\nexport default class Voucher extends Component {\n  \n  \n  SaveAllConfigWeb(value) {\n    this.props.SaveAllConfigWeb(value);\n  }\n\n  constructor(props) {\n    super(props);\n    this.state = {\n     \n      modalCom: false,\n      scoreInput: 0,\n      scoreMaxInput: 0,\n      statusInput: 0\n\n    };\n  }\n  setStateByName = (name, value) => {\n    this.props.setStateByName(name, value);\n  };\n  getstatusItem = (status)=> {\n    if(status ==\"1\")\n    {\n      return \"Hoạt động\";\n    }\n    return \"Không hoạt động\";\n  }\n\n  openModal() {\n    this.setState({\n      modalCom: !this.state.modalCom,\n    \n    })\n    \n  }\n\n  editdata (item){\n    console.log(item);\n \n\n    this.setState({\n      modalCom: !this.state.modalCom,\n      scoreMaxInput:  item.scoreMax,\n      id: item._id,\n      statusInput: item.status,\n      scoreInput:  item.score\n    \n    })\n  }\n\n  changeCompanySet (valueselect)\n  {\n\n  }\n  onChange(key, val) {\n    this.setState({ [key]: val })\n  }\n  reloadPage() {\n    \n   \n    this.openModal();\n    window.location.reload();\n\n  }\n\n  saveBeauty() {\n\n    \n  var baseUrlapi = \"https://api-soida.applamdep.com\";\n    let url = baseUrlapi + \"/api/gameBeauty/adminUpdate\";\n    \n    const bodyRequest = {\n        id: this.state.id,\n      status: this.state.statusInput,\n      score: this.state.scoreInput,\n      scoreMax: this.state.scoreMaxInput\n    };\n     axios\n    .post(url,bodyRequest )\n    .then((res) => {\n             Swal.fire({\n              title: 'thao tác thành công!',\n              timer: 3000,    \n            }\n            \n            );\n            this.reloadPage();\n    });\n \n};\n  render() {\n    return (\n      <>\n      \n       \n        <div class=\"flex-a-center config-box-border\">\n        \n        <table  className=\"table table-hover table-outline mb-0  d-sm-table\">\n                  <thead className=\"thead-light\">\n                    <tr>\n                      <th className=\"text-center\">STT.</th>\n                      <th className=\"text-center\">Tên công ty</th>\n                      <th className=\"text-center\">Điểm mỗi lươt soi</th>\n                      <th className=\"text-center\">Điểm tối đa\t</th>\n                         \n                      <th className=\"text-center\">Trạng thái</th>\n                      <th className=\"text-center\">Danh sách</th>\n                      <th className=\"text-center\">Chỉnh sửa</th>\n                          </tr>\n                  </thead>\n                  <tbody>\n             \n                    {\n                      this.props.dataListBeauty.map((item, i) => {\n                    \n                        var x =  this.props.dataCompany.find(x => x._id ===  item.companyId);\n\n                        const dataCompany = this.props.dataCompany;\n              \n                        var compnayName =\"\";\n                        if(x)\n                        {\n                          compnayName  = x.Name;\n                        }\n                        if(compnayName )\n                        {\n                        }\n                        else \n                        {\n                          return;\n                        }\n                        return (\n                              <tr >\n                                      <td className=\"text-center\">1 </td>\n                                      <td className=\"text-center\">{compnayName}</td>\n                                      <td className=\"text-center\">{item.score}</td>\n                                      <td className=\"text-center\">{item.scoreMax}</td>\n                                      <td className=\"text-center\">{this.getstatusItem(item.status)}</td>\n                                        \n                                      <td className=\"text-center\">\n                                          <CButton outline color=\"primary\" ><CIcon name=\"cil-magnifying-glass\" /> Xem chi tiết</CButton>\n                                      </td>\n                                      <td className=\"text-center\">\n                                          <CButton outline color=\"primary\"  onClick={e => this.editdata(item)} ><CIcon name=\"cis-update\" /> Sửa</CButton>\n                                      \n                                      </td>\n                            </tr>\n                        )\n\n                      })\n                     }\n                            \n                 \n                  </tbody>\n\n                </table>\n         \n        </div>\n\n\n        <Modal isOpen={this.state.modalCom} >\n            <ModalHeader>{'new' == 'new' ? `Tạo mới` : `Cập nhật`}</ModalHeader>\n            <ModalBody>\n              <TextFieldGroup\n                field=\"scoreInput\"\n                label=\"Điểm mỗi lượt soi\"\n              value ={this.state.scoreInput}\n              onChange={e => this.onChange(\"scoreInput\", e.target.value)}\n              />\n\n              <TextFieldGroup\n                field=\"scoreMaxInput\"\n                label=\"Điểm tối đa\"\n                value ={this.state.scoreMaxInput}\n                onChange={e => this.onChange(\"scoreMaxInput\", e.target.value)}\n              />\n               <CSelect\n                 onChange={e => this.onChange(\"statusInput\", e.target.value)}   custom size=\"sm\" name=\"company_idSearch\" \n                 value ={this.state.statusInput}\n                 id=\"company_idSearch\">\n                     \n                          <option   value =\"1\">\n                          Hoạt động\n                          </option>\n                          <option   value =\"0\">\n                          không hoạt động\n                          </option>\n                    \n                    </CSelect>\n\n            \n            </ModalBody>\n\n            <ModalFooter>\n              <CButton color=\"primary\"  onClick={e => this.saveBeauty()} >Lưu</CButton>\n              <CButton color=\"secondary\" onClick={e => this.openModal()} >Đóng</CButton>\n            </ModalFooter>\n          </Modal>\n       \n        \n      </>\n    );\n  }\n}\n","import React, { Component } from \"react\";\nimport List from \"@mui/material/List\";\n\nimport ListItemButton from \"@mui/material/ListItemButton\";\nimport ListItemIcon from \"@mui/material/ListItemIcon\";\nimport ListItemText from \"@mui/material/ListItemText\";\nimport \"react-datepicker/dist/react-datepicker.css\";\nimport Constants from \"../../contants/contants\";\nimport axios from \"axios\";\nimport { css } from \"@emotion/react\";\nimport DotLoader from \"react-spinners/DotLoader\";\nimport { IoLogoBuffer } from \"@react-icons/all-files/io/IoLogoBuffer\";\nimport BannerAia from \"./configWeb/BannerAia\";\nimport Logo from \"./configWeb/GameConfig\";\nimport DataList from \"./configWeb/dataList\";\n\nimport Seo from \"./configWeb/Content\";\nimport DataGame from \"./configWeb/gameUser\";\nimport { BiSlideshow } from \"react-icons/bi\";\nimport { MdOutlinePermDataSetting } from \"react-icons/md\";\nimport { BsChatDots } from \"react-icons/bs\";\n\nimport Swal from 'sweetalert2';\nlet headers = new Headers();\nconst auth = localStorage.getItem(\"auth\");\nheaders.append(\"Authorization\", \"Bearer \" + auth);\nheaders.append(\"Content-Type\", \"application/json\");\nclass ConfigWeb extends Component {\n  constructor(props) {\n    super(props);\n\n    if(localStorage.type !='2')\n    {\n      this.state = {\n        tabNameConfig: [\n           \n          {\n            _id: \"4\",\n            name: \"Cài đặt\",\n            icon: <IoLogoBuffer style={{ width: \"24px \", height: \"24px \" }} />,\n          },\n        ],\n        company_id: JSON.parse(localStorage.getItem(\"user\")).company_id\n          ? JSON.parse(localStorage.getItem(\"user\")).company_id\n          : null,\n        poupintro: \"\",\n        pupupSuccess: \"\",\n        popupfail: \"\",\n        fromDate: \"\",\n        todate: \"\",\n        fromtime: \"\",\n        totime: \"\",\n        zaloLink: \"\",\n        messengerLink: \"\",\n        dataGame:  [],\n   \n        dataListBeauty: [],\n        dataCompany: []\n  \n  \n      };\n    }\n    else \n    {\n      this.state = {\n        tabNameConfig: [\n            {\n            _id: \"4\",\n            name: \"Cài đặt\",\n            icon: <IoLogoBuffer style={{ width: \"24px \", height: \"24px \" }} />,\n          }\n          // ,\n          // {\n          //   _id: \"19\",\n          //   name: \"Danh sách\",\n          //   icon: <IoLogoBuffer style={{ width: \"24px \", height: \"24px \" }} />,\n          // }\n         \n        ],\n        company_id: JSON.parse(localStorage.getItem(\"user\")).company_id\n          ? JSON.parse(localStorage.getItem(\"user\")).company_id\n          : null,\n        poupintro: \"\",\n        pupupSuccess: \"\",\n        popupfail: \"\",\n        fromDate: \"\",\n        todate: \"\",\n        fromtime: \"\",\n        totime: \"\",\n        scoreMax: \"\",\n        dataGame:  [],\n        score: \"\",\n        dataListBeauty: [],\n        dataCompany: []\n  \n  \n      };\n    }\n   \n  }\n\n  ToggleViewConfigWeb(id) {\n    var i, tabcontent, tablinks;\n    tabcontent = document.getElementsByClassName(\"tabcontent\");\n    tablinks = document.getElementsByClassName(\"tablinks\");\n    const { tabNameConfig } = this.state;\n    for (i = 0; i < tabNameConfig.length; i++) {\n      if (tabNameConfig[i]._id === id) {\n        tablinks[i].classList.add(\"tabcontent-left-active\");\n      } else {\n        tablinks[i].classList.remove(\"tabcontent-left-active\");\n      }\n    }\n    for (i = 0; i < tabcontent.length; i++) {\n      if (tabcontent[i].id.replace(\"tabcontent\", \"\") === id) {\n        tabcontent[i].classList.add(\"defaultOpen\");\n        tabcontent[i].style.animation = \"hideOpa 1s ease-in-out\";\n      } else {\n        tabcontent[i].classList.remove(\"defaultOpen\");\n        tabcontent[i].style.animation = \"none\";\n      }\n    }\n  }\n  onChangeImage = (e, value, valueLink, valueShow) => {\n    let files = e.target.files;\n    let reader = new FileReader();\n    this.setState({ [valueLink]: files[0] });\n    reader.readAsDataURL(files[0]);\n    reader.onload = (e) => {\n      this.setState({ [value]: e.target.result, [valueShow]: e.target.result });\n    };\n  };\n  async componentDidMount() {\n    await this.getAllDataCompany();\n  \n      await this.getDataConfigWeb();\n\n      setTimeout(() => {\n         this.dataListBeauty();\n      }, 2000);\n\n   \n      if(localStorage.type =='2')\n      {\n        this.getDataBeautyUser();\n      }\n      \n \n      this.ToggleViewConfigWeb(\"4\");\n  }\n\n  async getAllDataCompany (){\n    \n    var baseUrlapi = Constants.BASE_URL;\n    let url = baseUrlapi + Constants.List_All_company;\n   \n    await axios\n      .post(url, {\n        params: {\n\n        \n        },\n      })\n      .then((res) => {\n        \n        var data = res.data;\n      \n      \n           this.setState(\n          {\n        \n            dataCompany: data.data.dataCompany\n           \n          },\n          () => {\n\n           \n          }\n        );\n      });\n\n  }\n\n async dataListBeauty ()\n {\n\n  var baseUrlapi = Constants.BASE_URL;\n    let url = baseUrlapi + \"/api/tuvan/getall\";\n   \n    await axios\n      .get(url, {\n        params: {\n\n        \n        },\n      })\n      .then((res) => {\n        \n        var data = res.data.data;\n      \n           this.setState(\n          {\n        \n            dataListBeauty: data\n           \n          },\n          () => {\n\n           \n          }\n        );\n      });\n\n }\n\n  async getDataConfigWeb() {\n    var baseUrlapi = Constants.BASE_URL;\n    let url = baseUrlapi + \"/api/tuvan/getInfo\";\n    const newComany_id = this.state.company_id;\n    let Output_newComany_id;\n    if (newComany_id) {\n      Output_newComany_id = newComany_id;\n    } else {\n      Output_newComany_id = \"-1\";\n    }\n    await axios\n      .get(url, {\n        params: {\n\n          company_id: Output_newComany_id,\n        },\n      })\n      .then((res) => {\n        \n        var data = res.data.data;\n        console.log(data);\n        \n           this.setState(\n          {\n        \n            messengerLink: data.messengerLink,\n            zaloLink: data.zaloLink\n           \n          },\n          () => {\n\n            console.log(this.state);\n          }\n        );\n      });\n  }\n\n  async getDataGame1() {\n    var baseUrlapi = Constants.BASE_URL;\n    let url = baseUrlapi + \"/api/get-game-data-11\";\n    const newComany_id = this.state.company_id;\n    let Output_newComany_id;\n    if (newComany_id) {\n      Output_newComany_id = newComany_id;\n    } else {\n      Output_newComany_id = \"-1\";\n    }\n    await axios\n      .get(url, {\n        params: {\n          company_id: Output_newComany_id,\n\n        },\n      })\n      .then((res) => {\n        \n         var data = res.data.data;\n          this.setState(\n          {\n            dataGame1 : data\n          },\n          () => {\n\n            \n          }\n        );\n      });\n  }\n\n  async getDataBeautyUser() {\n    var baseUrlapi = Constants.BASE_URL;\n    let url = baseUrlapi + \"/api/get-data-beauty-user\";\n    const newComany_id = this.state.company_id;\n    let Output_newComany_id;\n    if (newComany_id) {\n      Output_newComany_id = newComany_id;\n    } else {\n      Output_newComany_id = \"-1\";\n    }\n    await axios\n      .get(url, {\n        params: {\n          company_id: Output_newComany_id,\n\n        },\n      })\n      .then((res) => {\n        \n         var data = res.data.data;\n          this.setState(\n          {\n            dataGame1 : data\n          },\n          () => {\n\n            \n          }\n        );\n      });\n  }\n  async getDataGame() {\n    var baseUrlapi = Constants.BASE_URL;\n    let url = baseUrlapi + \"/api/get-game-data-1\";\n    const newComany_id = this.state.company_id;\n    let Output_newComany_id;\n    if (newComany_id) {\n      Output_newComany_id = newComany_id;\n    } else {\n      Output_newComany_id = \"-1\";\n    }\n    await axios\n      .get(url, {\n        params: {\n          company_id: Output_newComany_id,\n        },\n      })\n      .then((res) => {\n        \n         var data = res.data.data;\n          this.setState(\n          {\n            dataGame : data\n          },\n          () => {\n\n            console.log(data);\n          }\n        );\n      });\n  }\n\n  SaveAllConfigWeb = async (change) => {\n\n    var baseUrlapi = Constants.BASE_URL;\n    let url = baseUrlapi + \"/api/tuvan/update\";\n    const newComany_id = this.state.company_id;\n    let Output_newComany_id;\n    if (newComany_id) {\n      Output_newComany_id = newComany_id;\n    } else {\n      Output_newComany_id = \"-1\";\n    }\n    const bodyRequest = {\n    \n      company_id: Output_newComany_id,\n\n      messengerLink: this.state.messengerLink,\n      zaloLink: this.state.zaloLink\n\n};\n    \n\n    await axios\n    .post(url,bodyRequest )\n    .then((res) => {\n             Swal.fire({\n              title: 'thao tác thành công!',\n              timer: 3000,    \n            });\n    });\n \n  };\n\n  setStateByName = (name, value) => {\n    this.setState({ [name]: value });\n  };\n\n  render() {\n    if (!this.state.isLoading) {\n      return (\n        <div className=\"animated fadeIn\">\n          <div className=\"flex-tabs\">\n            <div className=\"tab\">\n              <List\n                sx={{\n                  width: \"100%\",\n                  maxWidth: 360,\n                  bgcolor: \"background.paper\",\n                }}\n                component=\"nav\"\n                aria-labelledby=\"nested-list-subheader\"\n              >\n                {this.state.tabNameConfig\n                  ? this.state.tabNameConfig.map((item, i) => {\n                      return (\n                        <ListItemButton\n                          key={item._id}\n                          className={\n                            i === 0\n                              ? \" tablinks tabcontent-left-active\"\n                              : \" tablinks\"\n                          }\n                          onClick={() => this.ToggleViewConfigWeb(item._id)}\n                          sx={{ pl: 4 }}\n                        >\n                          <ListItemIcon>{item.icon}</ListItemIcon>\n                          <ListItemText\n                            className=\"tabcontent-left\"\n                            style={{\n                              fontSize: \"14px !important\",\n                              color: \"rgb(52, 71, 103)\",\n                            }}\n                            primary={item.name}\n                          />\n                        </ListItemButton>\n                      );\n                    })\n                  : null}\n              </List>\n            </div>\n            <div className=\"tabcontents\">\n              \n              \n\n             \n            \n\n              <div id=\"tabcontent4\" className=\"tabcontent \">\n                <Logo\n                  SaveAllConfigWeb={this.SaveAllConfigWeb}\n                  setStateByName={this.setStateByName}\n              \n                  pupupSuccess={this.state.pupupSuccess}\n                  poupintro={this.state.poupintro}\n                  popupfail={this.state.popupfail}\n                  fromDate={this.state.fromDate}\n                  todate={this.state.todate}\n                  fromtime={this.state.fromtime}\n                  totime={this.state.totime}\n                  messengerLink={this.state.messengerLink}\n                  zaloLink={this.state.zaloLink}\n                  status= {this.state.status}\n                />\n              </div>\n              \n              {\n\n                  this.state.company_id == undefined ? ( <div id=\"tabcontent20\" className=\"tabcontent\">\n                  <DataList\n                 \n                    dataListBeauty =  {this.state.dataListBeauty}\n                  \n                    dataCompany = {this.state.dataCompany}\n                    \n                  />\n                </div>) : <></>\n              }\n             \n            </div>\n          </div>\n        </div>\n      );\n    }\n    return (\n      <div className=\"sweet-loading\">\n        <DotLoader\n          css={override}\n          size={50}\n          color={\"#123abc\"}\n          loading={this.state.isLoading}\n          speedMultiplier={1.5}\n        />\n      </div>\n    );\n  }\n}\n\nconst override = css`\n  display: block;\n  margin: 0 auto;\n  border-color: red;\n`;\n\nexport default ConfigWeb;\n","import { Component } from \"react\";\nimport TextFieldGroup from \"../../Common/TextFieldGroup\";\nimport { Button } from \"reactstrap\";\nimport {\n    CTextarea,\n  } from \"@coreui/react\";\nexport default class Seo extends Component {\n  SaveAllConfigWeb() {\n    this.props.SaveAllConfigWeb();\n  }\n  setStateByName = (name, value) => {\n    this.props.setStateByName(name, value);\n  };\n  onChangeImage=(e, name, name_link, name_show) =>{\n    this.props.onChangeImage(e, name, name_link, name_show);\n}\n  render() {\n    return (\n      <>\n        <div className=\"text-center\">\n          <Button\n            variant=\"contained\"\n            color=\"success\"\n            onClick={() => this.SaveAllConfigWeb()}\n          >\n            Lưu thay đổi\n          </Button>\n        </div>\n        <TextFieldGroup\n            field=\"poupintro\"\n            label=\"Poup giới thiệu:\"\n            value={this.props.poupintro}\n            placeholder={\"\"}\n            onChange={(e) => {\n              this.setStateByName( \"poupintro\", e.target.value );\n            }}\n        />\n        <TextFieldGroup\n            field=\"pupupSuccess\"\n            label=\"Câu thông  báo khi trúng thưởng:\"\n            value={this.props.pupupSuccess}\n            placeholder={\"\"}\n            onChange={(e) => {\n              this.setStateByName( \"pupupSuccess\", e.target.value );\n            }}\n        />\n        <TextFieldGroup\n            field=\"introduce\"\n            label=\"Câu thông báo khi không trúng thưởng:\"\n            value={this.props.popupfail}\n            placeholder={\"\"}\n            onChange={(e) => {\n              this.setStateByName( \"popupfail\", e.target.value );\n            }}\n        />  \n      </>\n    );\n  }\n}\n","import { Component } from \"react\";\nimport TextFieldGroup from \"../../Common/TextFieldGroup\";\nimport { Button } from \"reactstrap\";\nimport IframeModal from '../../components/Iframe';\nimport CIcon from '@coreui/icons-react';\nimport {\n  CButton\n} from '@coreui/react'\nimport {\n    CTextarea,\n  } from \"@coreui/react\";\n  export default class GameUser extends Component {\n   \n  SaveAllConfigWeb() {\n    this.props.SaveAllConfigWeb();\n  }\n  setStateByName = (name, value) => {\n    this.props.setStateByName(name, value);\n  };\n  onChangeImage=(e, name, name_link, name_show) =>{\n    this.props.onChangeImage(e, name, name_link, name_show);\n}\n\n\nviewHistory = (e) => {\n\n  window.open(\"/#/lich-su-ca-nhan/\"+ e, \"_blank\");\n\n}\n  render() {\n    return (\n      <>\n      \n        <table  className=\"table table-hover table-outline mb-0  d-sm-table\">\n                  <thead className=\"thead-light\">\n                        <tr>\n                            <th className=\"text-center\">STT.</th>\n                            <th className=\"text-center\">Tên</th>\n                            <th className=\"text-center\">Số điện thoại</th>\n                            <th className=\"text-center\">Hình ảnh</th>\n                            <th className=\"text-center\">Thông tin kết quả</th>\n                            <th className=\"text-center\">Ngày than gia</th>\n                            <th className=\"text-center\">Thông tin</th>\n                        </tr>\n                  </thead>\n                  <tbody>\n           \n                   \n                    {\n                      this.props.GameData != undefined ?\n                      this.props.GameData.map((item, i) => {\n                      return (\n                             <tr key={i}>\n                              <td className=\"text-center\">{i+1}</td>\n                                   <td className=\"text-center\">{item.UserName}</td>\n                                   <td className=\"text-center\">{item.Phone}</td>\n                                   <td className=\"text-center\">\n                                         <img src={item.Image} style={{ width: '100px', height: 50 }} />\n                                   </td>\n                                   <td className=\"text-left\">\n                                    \n                                         <p>Loại game: <strong>Game tuổi da</strong>  </p>\n                                         <p>Độ tuổi trúng game:  <strong>26 </strong>  </p>\n                                         <p>Độ tuổi thực:  <strong>{ item.ageGameReal} </strong>  </p>\n\n                                         <p>Trúng thưởng:   <strong>{item.successGame? \"Trúng thưởng\": \"Không\" } </strong></p>\n                                    </td>\n                                   \n                                   <td className=\"text-center\">\n                                          <p>{(new Date(item.Create_Date)).toLocaleDateString()} </p> \n                                          \n                                          <p>{(new Date(item.Create_Date)).toLocaleTimeString()} </p>\n                                            \n                                    </td>\n\n                                    <td className=\"text-center\">\n                                      <CButton outline color=\"primary\" onClick={e => {\n                                      this.viewHistory(\n                                         item._id\n                                      )\n                                      }}\n                                \n                                ><CIcon name=\"cil-magnifying-glass\" /> Xem chi tiết</CButton>\n                                     </td>\n\n\n                              </tr>\n                          );\n                        }) : \"\"\n                    }\n                  </tbody>\n\n               \n        </table>\n      \n   \n      </>\n    );\n  }\n}\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\n\nconst TextFieldGroup = ({ field, value, label, error, type, onChange, checkUserExists, readOnly, placeholder, onClick }) => {\n  return (\n    <div className={classnames('form-group', { 'has-error': error })}>\n      <label className=\"control-label\">{label}</label>\n      <input\n        onChange={onChange}\n        onClick={onClick}\n        onBlur={checkUserExists}\n        value={value}\n        type={type}\n        name={field}\n        placeholder={placeholder}\n        readOnly={readOnly}\n        className=\"form-control\"\n      />\n    {error && <span className=\"help-block\">{error}</span>}\n    </div>  );\n}\n\nTextFieldGroup.propTypes = {\n  field: PropTypes.string.isRequired,\n  value: PropTypes.string.isRequired,\n  label: PropTypes.string.isRequired,\n  error: PropTypes.string,\n  type: PropTypes.string.isRequired,\n  onChange: PropTypes.func.isRequired,\n  checkUserExists: PropTypes.func\n}\n\nTextFieldGroup.defaultProps = {\n  type: 'text'\n}\n\nexport default TextFieldGroup;\n","import React from 'react'\nimport PropTypes from 'prop-types'\nimport Iframes from 'react-iframe'\n\nimport {\n  CButton,\n  CModal,\n  CModalBody,\n  CModalFooter,\n  CModalHeader,\n  CModalTitle,\n} from '@coreui/react'\n\nfunction Iframe({ toggleView, link, closeModal }) {\n\n  const handleClose = () => {\n    if (closeModal) {\n      closeModal();\n    }\n  }\n\n  return (\n    <CModal\n      show={toggleView}\n      size=\"xl\"\n    >\n      <CModalHeader closeButton>\n        <CModalTitle>Chi tiết soi da</CModalTitle>\n      </CModalHeader>\n      <CModalBody>\n        <Iframes url={link}\n          width=\"100%\"\n          height=\"500px\"\n          display=\"initial\"\n          position=\"relative\" />\n      </CModalBody>\n      <CModalFooter>\n        <CButton color=\"secondary\" onClick={() => { handleClose() }}>Đóng</CButton>\n      </CModalFooter>\n    </CModal>\n  )\n}\n\nIframe.propTypes = {\n  link: PropTypes.string,\n  toggleView: PropTypes.bool\n}\n\nIframe.defaultProps = {\n  link: \"\",\n  toggleView: false\n};\n\nexport default Iframe\n\n"],"sourceRoot":""}